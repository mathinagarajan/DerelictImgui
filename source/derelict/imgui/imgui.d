/*
 * Copyright (c) 2017 Derelict Developers
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * * Neither the names 'Derelict', 'DerelictImgui', nor the names of its contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
module derelict.imgui.funcs;

/* generated by:
from mako.template import Template
print(Template(filename='funcs_template.txt').render())
open("imgui.d", "wb").write(Template(filename='funcs_template.txt').render().encode('utf-8'))
*/

private
{
    import derelict.util.system;
    import core.stdc.stdarg:va_list;
}



alias ImGuiColumnsFlags    = int;
alias ImS32                = int;
alias ImGuiTreeNodeFlags   = int;
alias ImGuiFocusedFlags    = int;
alias ImGuiHoveredFlags    = int;
alias ImU64                = ulong;
alias ImGuiID              = uint;
alias ImDrawListFlags      = int;
alias ImGuiBackendFlags    = int;
alias ImGuiMouseCursor     = int;
alias ImGuiStyleVar        = int;
alias ImGuiDir             = int;
alias ImGuiCol             = int;
alias ImDrawIdx            = ushort;
alias ImGuiComboFlags      = int;
alias ImDrawCornerFlags    = int;
alias ImWchar              = ushort;
alias ImGuiConfigFlags     = int;
alias ImGuiWindowFlags     = int;
alias ImGuiKey             = int;
alias ImGuiInputTextFlags  = int;
alias ImGuiDataType        = int;
alias ImGuiCond            = int;
alias ImU32                = uint;
alias ImGuiNavInput        = int;
alias ImGuiColorEditFlags  = int;
alias ImGuiSelectableFlags = int;
alias ImTextureID          = void*;
alias ImFontAtlasFlags     = int;
alias ImS64                = long;
alias ImGuiDragDropFlags   = int;
// special internal alias
alias ImDrawListSharedData = void;
alias ImGuiContext = void;

enum {
    ImGuiComboFlags_None                               = 0,
    ImGuiComboFlags_PopupAlignLeft                     = 1 << 0,
    ImGuiComboFlags_HeightSmall                        = 1 << 1,
    ImGuiComboFlags_HeightRegular                      = 1 << 2,
    ImGuiComboFlags_HeightLarge                        = 1 << 3,
    ImGuiComboFlags_HeightLargest                      = 1 << 4,
    ImGuiComboFlags_NoArrowButton                      = 1 << 5,
    ImGuiComboFlags_NoPreview                          = 1 << 6,
    ImGuiComboFlags_HeightMask_                        = ImGuiComboFlags_HeightSmall | ImGuiComboFlags_HeightRegular | ImGuiComboFlags_HeightLarge | ImGuiComboFlags_HeightLargest,
}

enum {
    ImGuiTreeNodeFlags_None                            = 0,
    ImGuiTreeNodeFlags_Selected                        = 1 << 0,
    ImGuiTreeNodeFlags_Framed                          = 1 << 1,
    ImGuiTreeNodeFlags_AllowItemOverlap                = 1 << 2,
    ImGuiTreeNodeFlags_NoTreePushOnOpen                = 1 << 3,
    ImGuiTreeNodeFlags_NoAutoOpenOnLog                 = 1 << 4,
    ImGuiTreeNodeFlags_DefaultOpen                     = 1 << 5,
    ImGuiTreeNodeFlags_OpenOnDoubleClick               = 1 << 6,
    ImGuiTreeNodeFlags_OpenOnArrow                     = 1 << 7,
    ImGuiTreeNodeFlags_Leaf                            = 1 << 8,
    ImGuiTreeNodeFlags_Bullet                          = 1 << 9,
    ImGuiTreeNodeFlags_FramePadding                    = 1 << 10,
    ImGuiTreeNodeFlags_NavLeftJumpsBackHere            = 1 << 13,
    ImGuiTreeNodeFlags_CollapsingHeader                = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoTreePushOnOpen | ImGuiTreeNodeFlags_NoAutoOpenOnLog,
}

enum {
    ImGuiStyleVar_Alpha                                = 0,
    ImGuiStyleVar_WindowPadding                        = 1,
    ImGuiStyleVar_WindowRounding                       = 2,
    ImGuiStyleVar_WindowBorderSize                     = 3,
    ImGuiStyleVar_WindowMinSize                        = 4,
    ImGuiStyleVar_WindowTitleAlign                     = 5,
    ImGuiStyleVar_ChildRounding                        = 6,
    ImGuiStyleVar_ChildBorderSize                      = 7,
    ImGuiStyleVar_PopupRounding                        = 8,
    ImGuiStyleVar_PopupBorderSize                      = 9,
    ImGuiStyleVar_FramePadding                         = 10,
    ImGuiStyleVar_FrameRounding                        = 11,
    ImGuiStyleVar_FrameBorderSize                      = 12,
    ImGuiStyleVar_ItemSpacing                          = 13,
    ImGuiStyleVar_ItemInnerSpacing                     = 14,
    ImGuiStyleVar_IndentSpacing                        = 15,
    ImGuiStyleVar_ScrollbarSize                        = 16,
    ImGuiStyleVar_ScrollbarRounding                    = 17,
    ImGuiStyleVar_GrabMinSize                          = 18,
    ImGuiStyleVar_GrabRounding                         = 19,
    ImGuiStyleVar_ButtonTextAlign                      = 20,
    ImGuiStyleVar_COUNT                                = 21,
}

enum {
    ImGuiCol_Text                                      = 0,
    ImGuiCol_TextDisabled                              = 1,
    ImGuiCol_WindowBg                                  = 2,
    ImGuiCol_ChildBg                                   = 3,
    ImGuiCol_PopupBg                                   = 4,
    ImGuiCol_Border                                    = 5,
    ImGuiCol_BorderShadow                              = 6,
    ImGuiCol_FrameBg                                   = 7,
    ImGuiCol_FrameBgHovered                            = 8,
    ImGuiCol_FrameBgActive                             = 9,
    ImGuiCol_TitleBg                                   = 10,
    ImGuiCol_TitleBgActive                             = 11,
    ImGuiCol_TitleBgCollapsed                          = 12,
    ImGuiCol_MenuBarBg                                 = 13,
    ImGuiCol_ScrollbarBg                               = 14,
    ImGuiCol_ScrollbarGrab                             = 15,
    ImGuiCol_ScrollbarGrabHovered                      = 16,
    ImGuiCol_ScrollbarGrabActive                       = 17,
    ImGuiCol_CheckMark                                 = 18,
    ImGuiCol_SliderGrab                                = 19,
    ImGuiCol_SliderGrabActive                          = 20,
    ImGuiCol_Button                                    = 21,
    ImGuiCol_ButtonHovered                             = 22,
    ImGuiCol_ButtonActive                              = 23,
    ImGuiCol_Header                                    = 24,
    ImGuiCol_HeaderHovered                             = 25,
    ImGuiCol_HeaderActive                              = 26,
    ImGuiCol_Separator                                 = 27,
    ImGuiCol_SeparatorHovered                          = 28,
    ImGuiCol_SeparatorActive                           = 29,
    ImGuiCol_ResizeGrip                                = 30,
    ImGuiCol_ResizeGripHovered                         = 31,
    ImGuiCol_ResizeGripActive                          = 32,
    ImGuiCol_PlotLines                                 = 33,
    ImGuiCol_PlotLinesHovered                          = 34,
    ImGuiCol_PlotHistogram                             = 35,
    ImGuiCol_PlotHistogramHovered                      = 36,
    ImGuiCol_TextSelectedBg                            = 37,
    ImGuiCol_DragDropTarget                            = 38,
    ImGuiCol_NavHighlight                              = 39,
    ImGuiCol_NavWindowingHighlight                     = 40,
    ImGuiCol_NavWindowingDimBg                         = 41,
    ImGuiCol_ModalWindowDimBg                          = 42,
    ImGuiCol_COUNT                                     = 43,
}

enum {
    ImGuiWindowFlags_None                              = 0,
    ImGuiWindowFlags_NoTitleBar                        = 1 << 0,
    ImGuiWindowFlags_NoResize                          = 1 << 1,
    ImGuiWindowFlags_NoMove                            = 1 << 2,
    ImGuiWindowFlags_NoScrollbar                       = 1 << 3,
    ImGuiWindowFlags_NoScrollWithMouse                 = 1 << 4,
    ImGuiWindowFlags_NoCollapse                        = 1 << 5,
    ImGuiWindowFlags_AlwaysAutoResize                  = 1 << 6,
    ImGuiWindowFlags_NoBackground                      = 1 << 7,
    ImGuiWindowFlags_NoSavedSettings                   = 1 << 8,
    ImGuiWindowFlags_NoMouseInputs                     = 1 << 9,
    ImGuiWindowFlags_MenuBar                           = 1 << 10,
    ImGuiWindowFlags_HorizontalScrollbar               = 1 << 11,
    ImGuiWindowFlags_NoFocusOnAppearing                = 1 << 12,
    ImGuiWindowFlags_NoBringToFrontOnFocus             = 1 << 13,
    ImGuiWindowFlags_AlwaysVerticalScrollbar           = 1 << 14,
    ImGuiWindowFlags_AlwaysHorizontalScrollbar         = 1<< 15,
    ImGuiWindowFlags_AlwaysUseWindowPadding            = 1 << 16,
    ImGuiWindowFlags_NoNavInputs                       = 1 << 18,
    ImGuiWindowFlags_NoNavFocus                        = 1 << 19,
    ImGuiWindowFlags_NoNav                             = ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,
    ImGuiWindowFlags_NoDecoration                      = ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoResize | ImGuiWindowFlags_NoScrollbar | ImGuiWindowFlags_NoCollapse,
    ImGuiWindowFlags_NoInputs                          = ImGuiWindowFlags_NoMouseInputs | ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,
    ImGuiWindowFlags_NavFlattened                      = 1 << 23,
    ImGuiWindowFlags_ChildWindow                       = 1 << 24,
    ImGuiWindowFlags_Tooltip                           = 1 << 25,
    ImGuiWindowFlags_Popup                             = 1 << 26,
    ImGuiWindowFlags_Modal                             = 1 << 27,
    ImGuiWindowFlags_ChildMenu                         = 1 << 28,
}

enum {
    ImGuiNavInput_Activate                             = 0,
    ImGuiNavInput_Cancel                               = 1,
    ImGuiNavInput_Input                                = 2,
    ImGuiNavInput_Menu                                 = 3,
    ImGuiNavInput_DpadLeft                             = 4,
    ImGuiNavInput_DpadRight                            = 5,
    ImGuiNavInput_DpadUp                               = 6,
    ImGuiNavInput_DpadDown                             = 7,
    ImGuiNavInput_LStickLeft                           = 8,
    ImGuiNavInput_LStickRight                          = 9,
    ImGuiNavInput_LStickUp                             = 10,
    ImGuiNavInput_LStickDown                           = 11,
    ImGuiNavInput_FocusPrev                            = 12,
    ImGuiNavInput_FocusNext                            = 13,
    ImGuiNavInput_TweakSlow                            = 14,
    ImGuiNavInput_TweakFast                            = 15,
    ImGuiNavInput_KeyMenu_                             = 16,
    ImGuiNavInput_KeyLeft_                             = 17,
    ImGuiNavInput_KeyRight_                            = 18,
    ImGuiNavInput_KeyUp_                               = 19,
    ImGuiNavInput_KeyDown_                             = 20,
    ImGuiNavInput_COUNT                                = 21,
    ImGuiNavInput_InternalStart_                       = ImGuiNavInput_KeyMenu_,
}

enum {
    ImGuiFocusedFlags_None                             = 0,
    ImGuiFocusedFlags_ChildWindows                     = 1 << 0,
    ImGuiFocusedFlags_RootWindow                       = 1 << 1,
    ImGuiFocusedFlags_AnyWindow                        = 1 << 2,
    ImGuiFocusedFlags_RootAndChildWindows              = ImGuiFocusedFlags_RootWindow | ImGuiFocusedFlags_ChildWindows,
}

enum {
    ImGuiSelectableFlags_None                          = 0,
    ImGuiSelectableFlags_DontClosePopups               = 1 << 0,
    ImGuiSelectableFlags_SpanAllColumns                = 1 << 1,
    ImGuiSelectableFlags_AllowDoubleClick              = 1 << 2,
    ImGuiSelectableFlags_Disabled                      = 1 << 3,
}

enum {
    ImGuiKey_Tab                                       = 0,
    ImGuiKey_LeftArrow                                 = 1,
    ImGuiKey_RightArrow                                = 2,
    ImGuiKey_UpArrow                                   = 3,
    ImGuiKey_DownArrow                                 = 4,
    ImGuiKey_PageUp                                    = 5,
    ImGuiKey_PageDown                                  = 6,
    ImGuiKey_Home                                      = 7,
    ImGuiKey_End                                       = 8,
    ImGuiKey_Insert                                    = 9,
    ImGuiKey_Delete                                    = 10,
    ImGuiKey_Backspace                                 = 11,
    ImGuiKey_Space                                     = 12,
    ImGuiKey_Enter                                     = 13,
    ImGuiKey_Escape                                    = 14,
    ImGuiKey_A                                         = 15,
    ImGuiKey_C                                         = 16,
    ImGuiKey_V                                         = 17,
    ImGuiKey_X                                         = 18,
    ImGuiKey_Y                                         = 19,
    ImGuiKey_Z                                         = 20,
    ImGuiKey_COUNT                                     = 21,
}

enum {
    ImFontAtlasFlags_None                              = 0,
    ImFontAtlasFlags_NoPowerOfTwoHeight                = 1 << 0,
    ImFontAtlasFlags_NoMouseCursors                    = 1 << 1,
}

enum {
    ImGuiConfigFlags_NavEnableKeyboard                 = 1 << 0,
    ImGuiConfigFlags_NavEnableGamepad                  = 1 << 1,
    ImGuiConfigFlags_NavEnableSetMousePos              = 1 << 2,
    ImGuiConfigFlags_NavNoCaptureKeyboard              = 1 << 3,
    ImGuiConfigFlags_NoMouse                           = 1 << 4,
    ImGuiConfigFlags_NoMouseCursorChange               = 1 << 5,
    ImGuiConfigFlags_IsSRGB                            = 1 << 20,
    ImGuiConfigFlags_IsTouchScreen                     = 1 << 21,
}

enum {
    ImDrawCornerFlags_TopLeft                          = 1 << 0,
    ImDrawCornerFlags_TopRight                         = 1 << 1,
    ImDrawCornerFlags_BotLeft                          = 1 << 2,
    ImDrawCornerFlags_BotRight                         = 1 << 3,
    ImDrawCornerFlags_Top                              = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_TopRight,
    ImDrawCornerFlags_Bot                              = ImDrawCornerFlags_BotLeft | ImDrawCornerFlags_BotRight,
    ImDrawCornerFlags_Left                             = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_BotLeft,
    ImDrawCornerFlags_Right                            = ImDrawCornerFlags_TopRight | ImDrawCornerFlags_BotRight,
    ImDrawCornerFlags_All                              = 0xF,
}

enum {
    ImGuiDragDropFlags_None                            = 0,
    ImGuiDragDropFlags_SourceNoPreviewTooltip          = 1 << 0,
    ImGuiDragDropFlags_SourceNoDisableHover            = 1 << 1,
    ImGuiDragDropFlags_SourceNoHoldToOpenOthers        = 1 << 2,
    ImGuiDragDropFlags_SourceAllowNullID               = 1 << 3,
    ImGuiDragDropFlags_SourceExtern                    = 1 << 4,
    ImGuiDragDropFlags_SourceAutoExpirePayload         = 1 << 5,
    ImGuiDragDropFlags_AcceptBeforeDelivery            = 1 << 10,
    ImGuiDragDropFlags_AcceptNoDrawDefaultRect         = 1 << 11,
    ImGuiDragDropFlags_AcceptNoPreviewTooltip          = 1 << 12,
    ImGuiDragDropFlags_AcceptPeekOnly                  = ImGuiDragDropFlags_AcceptBeforeDelivery | ImGuiDragDropFlags_AcceptNoDrawDefaultRect,
}

enum {
    ImGuiCond_Always                                   = 1 << 0,
    ImGuiCond_Once                                     = 1 << 1,
    ImGuiCond_FirstUseEver                             = 1 << 2,
    ImGuiCond_Appearing                                = 1 << 3,
}

enum {
    ImGuiInputTextFlags_None                           = 0,
    ImGuiInputTextFlags_CharsDecimal                   = 1 << 0,
    ImGuiInputTextFlags_CharsHexadecimal               = 1 << 1,
    ImGuiInputTextFlags_CharsUppercase                 = 1 << 2,
    ImGuiInputTextFlags_CharsNoBlank                   = 1 << 3,
    ImGuiInputTextFlags_AutoSelectAll                  = 1 << 4,
    ImGuiInputTextFlags_EnterReturnsTrue               = 1 << 5,
    ImGuiInputTextFlags_CallbackCompletion             = 1 << 6,
    ImGuiInputTextFlags_CallbackHistory                = 1 << 7,
    ImGuiInputTextFlags_CallbackAlways                 = 1 << 8,
    ImGuiInputTextFlags_CallbackCharFilter             = 1 << 9,
    ImGuiInputTextFlags_AllowTabInput                  = 1 << 10,
    ImGuiInputTextFlags_CtrlEnterForNewLine            = 1 << 11,
    ImGuiInputTextFlags_NoHorizontalScroll             = 1 << 12,
    ImGuiInputTextFlags_AlwaysInsertMode               = 1 << 13,
    ImGuiInputTextFlags_ReadOnly                       = 1 << 14,
    ImGuiInputTextFlags_Password                       = 1 << 15,
    ImGuiInputTextFlags_NoUndoRedo                     = 1 << 16,
    ImGuiInputTextFlags_CharsScientific                = 1 << 17,
    ImGuiInputTextFlags_CallbackResize                 = 1 << 18,
    ImGuiInputTextFlags_Multiline                      = 1 << 20,
}

enum {
    ImGuiMouseCursor_None                              = -1,
    ImGuiMouseCursor_Arrow                             = 0,
    ImGuiMouseCursor_TextInput                         = 1,
    ImGuiMouseCursor_ResizeAll                         = 2,
    ImGuiMouseCursor_ResizeNS                          = 3,
    ImGuiMouseCursor_ResizeEW                          = 4,
    ImGuiMouseCursor_ResizeNESW                        = 5,
    ImGuiMouseCursor_ResizeNWSE                        = 6,
    ImGuiMouseCursor_Hand                              = 7,
    ImGuiMouseCursor_COUNT                             = 8,
}

enum {
    ImGuiColorEditFlags_None                           = 0,
    ImGuiColorEditFlags_NoAlpha                        = 1 << 1,
    ImGuiColorEditFlags_NoPicker                       = 1 << 2,
    ImGuiColorEditFlags_NoOptions                      = 1 << 3,
    ImGuiColorEditFlags_NoSmallPreview                 = 1 << 4,
    ImGuiColorEditFlags_NoInputs                       = 1 << 5,
    ImGuiColorEditFlags_NoTooltip                      = 1 << 6,
    ImGuiColorEditFlags_NoLabel                        = 1 << 7,
    ImGuiColorEditFlags_NoSidePreview                  = 1 << 8,
    ImGuiColorEditFlags_NoDragDrop                     = 1 << 9,
    ImGuiColorEditFlags_AlphaBar                       = 1 << 16,
    ImGuiColorEditFlags_AlphaPreview                   = 1 << 17,
    ImGuiColorEditFlags_AlphaPreviewHalf               = 1 << 18,
    ImGuiColorEditFlags_HDR                            = 1 << 19,
    ImGuiColorEditFlags_RGB                            = 1 << 20,
    ImGuiColorEditFlags_HSV                            = 1 << 21,
    ImGuiColorEditFlags_HEX                            = 1 << 22,
    ImGuiColorEditFlags_Uint8                          = 1 << 23,
    ImGuiColorEditFlags_Float                          = 1 << 24,
    ImGuiColorEditFlags_PickerHueBar                   = 1 << 25,
    ImGuiColorEditFlags_PickerHueWheel                 = 1 << 26,
    ImGuiColorEditFlags__InputsMask                    = ImGuiColorEditFlags_RGB|ImGuiColorEditFlags_HSV|ImGuiColorEditFlags_HEX,
    ImGuiColorEditFlags__DataTypeMask                  = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_Float,
    ImGuiColorEditFlags__PickerMask                    = ImGuiColorEditFlags_PickerHueWheel|ImGuiColorEditFlags_PickerHueBar,
    ImGuiColorEditFlags__OptionsDefault                = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_RGB|ImGuiColorEditFlags_PickerHueBar,
}

enum {
    ImGuiHoveredFlags_None                             = 0,
    ImGuiHoveredFlags_ChildWindows                     = 1 << 0,
    ImGuiHoveredFlags_RootWindow                       = 1 << 1,
    ImGuiHoveredFlags_AnyWindow                        = 1 << 2,
    ImGuiHoveredFlags_AllowWhenBlockedByPopup          = 1 << 3,
    ImGuiHoveredFlags_AllowWhenBlockedByActiveItem     = 1 << 5,
    ImGuiHoveredFlags_AllowWhenOverlapped              = 1 << 6,
    ImGuiHoveredFlags_AllowWhenDisabled                = 1 << 7,
    ImGuiHoveredFlags_RectOnly                         = ImGuiHoveredFlags_AllowWhenBlockedByPopup | ImGuiHoveredFlags_AllowWhenBlockedByActiveItem | ImGuiHoveredFlags_AllowWhenOverlapped,
    ImGuiHoveredFlags_RootAndChildWindows              = ImGuiHoveredFlags_RootWindow | ImGuiHoveredFlags_ChildWindows,
}

enum {
    ImGuiDir_None                                      = -1,
    ImGuiDir_Left                                      = 0,
    ImGuiDir_Right                                     = 1,
    ImGuiDir_Up                                        = 2,
    ImGuiDir_Down                                      = 3,
    ImGuiDir_COUNT                                     = 4,
}

enum {
    ImDrawListFlags_AntiAliasedLines                   = 1 << 0,
    ImDrawListFlags_AntiAliasedFill                    = 1 << 1,
}

enum {
    ImGuiDataType_S32                                  = 0,
    ImGuiDataType_U32                                  = 1,
    ImGuiDataType_S64                                  = 2,
    ImGuiDataType_U64                                  = 3,
    ImGuiDataType_Float                                = 4,
    ImGuiDataType_Double                               = 5,
    ImGuiDataType_COUNT                                = 6,
}

enum {
    ImGuiBackendFlags_HasGamepad                       = 1 << 0,
    ImGuiBackendFlags_HasMouseCursors                  = 1 << 1,
    ImGuiBackendFlags_HasSetMousePos                   = 1 << 2,
}


struct ImVector(T)
{
    int                         Size = 0;
    int                         Capacity = 0;
    T*                          Data = null;

    ~this()
    {
        import core.stdc.stdlib;
        if (Data !is null) free(Data);
    }
    this(this)
    {
        reserve(Capacity);
    }
    void clear()
    {
        Size = 0;
    }
    void reserve(int newcap)
    {
        import core.stdc.stdlib;
        import std.algorithm;
        T* newData = cast(T*)(malloc(T.sizeof * newcap));
        auto copysize = min(newcap, Size);
        newData[0..copysize] = Data[0..copysize];
        newData[copysize..newcap] = T();
        Data = newData;
        Size = copysize;
        Capacity = newcap;
    }
    void resize(int newsize)
    {
        if (newsize > Capacity) 
            reserve(newsize);
        if (newsize < Capacity)
            Data[Size..newsize] = T();
        Size = newsize;
    }
    void push_back(ref T item)
    {
        if (Size >= Capacity)
            reserve(Size + 32);
        range()[Size++] = item;
    }
    T pop_back()
    {
        return range()[--Size];
    }
    T[] range() { return Data[0..Size]; }
}

alias ImVector_ImDrawCmd = ImVector!(ImDrawCmd);
alias ImVector_ImDrawIdx = ImVector!(ImDrawIdx);
alias ImVector_ImDrawVert = ImVector!(ImDrawVert);
alias ImVector_ImVec4 = ImVector!(ImVec4);
alias ImVector_ImTextureID = ImVector!(ImTextureID);
alias ImVector_ImVec2 = ImVector!(ImVec2);
alias ImVector_ImDrawChannel = ImVector!(ImDrawChannel);
alias ImVector_ImFontGlyph = ImVector!(ImFontGlyph);
alias ImVector_float = ImVector!(float);
alias ImVector_ImWchar = ImVector!(ImWchar);
alias ImVector_unsigned_char = ImVector!(char);
alias ImVector_Pair = ImVector!(Pair);
alias ImVector_ImFontPtr = ImVector!(ImFont*);
alias ImVector_CustomRect = ImVector!(CustomRect);
alias ImVector_ImFontConfig = ImVector!(ImFontConfig);
alias ImVector_char = ImVector!(char);
alias ImVector_TextRange = ImVector!(TextRange);

struct ImDrawVert
{
    ImVec2 pos;
    ImVec2 uv;
    ImU32 col;
}
struct ImDrawList
{
    ImVector_ImDrawCmd CmdBuffer;
    ImVector_ImDrawIdx IdxBuffer;
    ImVector_ImDrawVert VtxBuffer;
    ImDrawListFlags Flags;
    const(ImDrawListSharedData)* _Data;
    const(char)* _OwnerName;
    uint _VtxCurrentIdx;
    ImDrawVert* _VtxWritePtr;
    ImDrawIdx* _IdxWritePtr;
    ImVector_ImVec4 _ClipRectStack;
    ImVector_ImTextureID _TextureIdStack;
    ImVector_ImVec2 _Path;
    int _ChannelsCurrent;
    int _ChannelsCount;
    ImVector_ImDrawChannel _Channels;
}
struct Pair
{
    ImGuiID key;
    union { int val_i; float val_f; void* val_p; };
}
struct ImFont
{
    float FontSize;
    float Scale;
    ImVec2 DisplayOffset;
    ImVector_ImFontGlyph Glyphs;
    ImVector_float IndexAdvanceX;
    ImVector_ImWchar IndexLookup;
    const(ImFontGlyph)* FallbackGlyph;
    float FallbackAdvanceX;
    ImWchar FallbackChar;
    short ConfigDataCount;
    ImFontConfig* ConfigData;
    ImFontAtlas* ContainerAtlas;
    float Ascent;
    float Descent;
    bool DirtyLookupTables;
    int MetricsTotalSurface;
}
struct ImGuiListClipper
{
    float StartPosY;
    float ItemsHeight;
    int ItemsCount;
    int StepNo;
    int DisplayStart;
    int DisplayEnd;
}
struct CustomRect
{
    uint ID;
    ushort Width;
    ushort Height;
    ushort X;
    ushort Y;
    float GlyphAdvanceX;
    ImVec2 GlyphOffset;
    ImFont* Font;
}
struct ImVec4
{
    float x;
    float y;
    float z;
    float w;
}
struct GlyphRangesBuilder
{
    ImVector_unsigned_char UsedChars;
}
struct ImGuiStorage
{
    ImVector_Pair Data;
}
struct ImFontAtlas
{
    bool Locked;
    ImFontAtlasFlags Flags;
    ImTextureID TexID;
    int TexDesiredWidth;
    int TexGlyphPadding;
    char* TexPixelsAlpha8;
    uint* TexPixelsRGBA32;
    int TexWidth;
    int TexHeight;
    ImVec2 TexUvScale;
    ImVec2 TexUvWhitePixel;
    ImVector_ImFontPtr Fonts;
    ImVector_CustomRect CustomRects;
    ImVector_ImFontConfig ConfigData;
    int[1] CustomRectIds;
}
struct ImFontGlyph
{
    ImWchar Codepoint;
    float AdvanceX;
    float X0;
    float Y0;
    float X1;
    float Y1;
    float U0;
    float V0;
    float U1;
    float V1;
}
struct ImFontConfig
{
    void* FontData;
    int FontDataSize;
    bool FontDataOwnedByAtlas;
    int FontNo;
    float SizePixels;
    int OversampleH;
    int OversampleV;
    bool PixelSnapH;
    ImVec2 GlyphExtraSpacing;
    ImVec2 GlyphOffset;
    const(ImWchar)* GlyphRanges;
    float GlyphMinAdvanceX;
    float GlyphMaxAdvanceX;
    bool MergeMode;
    uint RasterizerFlags;
    float RasterizerMultiply;
    char[40] Name;
    ImFont* DstFont;
}
struct ImDrawData
{
    bool Valid;
    ImDrawList** CmdLists;
    int CmdListsCount;
    int TotalIdxCount;
    int TotalVtxCount;
    ImVec2 DisplayPos;
    ImVec2 DisplaySize;
}
struct ImGuiTextBuffer
{
    ImVector_char Buf;
}
struct ImGuiStyle
{
    float Alpha;
    ImVec2 WindowPadding;
    float WindowRounding;
    float WindowBorderSize;
    ImVec2 WindowMinSize;
    ImVec2 WindowTitleAlign;
    float ChildRounding;
    float ChildBorderSize;
    float PopupRounding;
    float PopupBorderSize;
    ImVec2 FramePadding;
    float FrameRounding;
    float FrameBorderSize;
    ImVec2 ItemSpacing;
    ImVec2 ItemInnerSpacing;
    ImVec2 TouchExtraPadding;
    float IndentSpacing;
    float ColumnsMinSpacing;
    float ScrollbarSize;
    float ScrollbarRounding;
    float GrabMinSize;
    float GrabRounding;
    ImVec2 ButtonTextAlign;
    ImVec2 DisplayWindowPadding;
    ImVec2 DisplaySafeAreaPadding;
    float MouseCursorScale;
    bool AntiAliasedLines;
    bool AntiAliasedFill;
    float CurveTessellationTol;
    ImVec4[ImGuiCol_COUNT] Colors;
}
struct ImDrawChannel
{
    ImVector_ImDrawCmd CmdBuffer;
    ImVector_ImDrawIdx IdxBuffer;
}
struct ImDrawCmd
{
    uint ElemCount;
    ImVec4 ClipRect;
    ImTextureID TextureId;
    ImDrawCallback UserCallback;
    void* UserCallbackData;
}
struct TextRange
{
    const(char)* b;
    const(char)* e;
}
struct ImGuiOnceUponAFrame
{
    int RefFrame;
}
struct ImGuiIO
{
    ImGuiConfigFlags ConfigFlags;
    ImGuiBackendFlags BackendFlags;
    ImVec2 DisplaySize;
    float DeltaTime;
    float IniSavingRate;
    const(char)* IniFilename;
    const(char)* LogFilename;
    float MouseDoubleClickTime;
    float MouseDoubleClickMaxDist;
    float MouseDragThreshold;
    int[ImGuiKey_COUNT] KeyMap;
    float KeyRepeatDelay;
    float KeyRepeatRate;
    void* UserData;
    ImFontAtlas* Fonts;
    float FontGlobalScale;
    bool FontAllowUserScaling;
    ImFont* FontDefault;
    ImVec2 DisplayFramebufferScale;
    ImVec2 DisplayVisibleMin;
    ImVec2 DisplayVisibleMax;
    bool MouseDrawCursor;
    bool ConfigMacOSXBehaviors;
    bool ConfigInputTextCursorBlink;
    bool ConfigResizeWindowsFromEdges;
    GetClipboardTextFunc GetClipboardTextFn;
    SetClipboardTextFunc SetClipboardTextFn;
    void* ClipboardUserData;
    ImeSetInputScreenPosFunc ImeSetInputScreenPosFn;
    void* ImeWindowHandle;
    void* RenderDrawListsFnUnused;
    ImVec2 MousePos;
    bool[5] MouseDown;
    float MouseWheel;
    float MouseWheelH;
    bool KeyCtrl;
    bool KeyShift;
    bool KeyAlt;
    bool KeySuper;
    bool[512] KeysDown;
    ImWchar[16+1] InputCharacters;
    float[ImGuiNavInput_COUNT] NavInputs;
    bool WantCaptureMouse;
    bool WantCaptureKeyboard;
    bool WantTextInput;
    bool WantSetMousePos;
    bool WantSaveIniSettings;
    bool NavActive;
    bool NavVisible;
    float Framerate;
    int MetricsRenderVertices;
    int MetricsRenderIndices;
    int MetricsRenderWindows;
    int MetricsActiveWindows;
    int MetricsActiveAllocations;
    ImVec2 MouseDelta;
    ImVec2 MousePosPrev;
    ImVec2[5] MouseClickedPos;
    double[5] MouseClickedTime;
    bool[5] MouseClicked;
    bool[5] MouseDoubleClicked;
    bool[5] MouseReleased;
    bool[5] MouseDownOwned;
    float[5] MouseDownDuration;
    float[5] MouseDownDurationPrev;
    ImVec2[5] MouseDragMaxDistanceAbs;
    float[5] MouseDragMaxDistanceSqr;
    float[512] KeysDownDuration;
    float[512] KeysDownDurationPrev;
    float[ImGuiNavInput_COUNT] NavInputsDownDuration;
    float[ImGuiNavInput_COUNT] NavInputsDownDurationPrev;
}
struct ImGuiPayload
{
    void* Data;
    int DataSize;
    ImGuiID SourceId;
    ImGuiID SourceParentId;
    int DataFrameCount;
    char[32+1] DataType;
    bool Preview;
    bool Delivery;
}
struct ImColor
{
    ImVec4 Value;
}
struct ImGuiSizeCallbackData
{
    void* UserData;
    ImVec2 Pos;
    ImVec2 CurrentSize;
    ImVec2 DesiredSize;
}
struct ImGuiTextFilter
{
    char[256] InputBuf;
    ImVector_TextRange Filters;
    int CountGrep;
}
struct ImGuiInputTextCallbackData
{
    ImGuiInputTextFlags EventFlag;
    ImGuiInputTextFlags Flags;
    void* UserData;
    ImWchar EventChar;
    ImGuiKey EventKey;
    char* Buf;
    int BufTextLen;
    int BufSize;
    bool BufDirty;
    int CursorPos;
    int SelectionStart;
    int SelectionEnd;
}
struct ImVec2
{
    float x;
    float y;
}

extern(C) @nogc nothrow
{
    alias ImGuiAllocFunc = void* function(size_t sz, void* user_data);
	alias ImGuiFreeFunc = void function(void* ptr, void* user_data);
	alias ImGuiSizeCallback = void function(ImGuiSizeCallbackData* data);
	alias ImGuiInputTextCallback = int function(ImGuiInputTextCallbackData *data);
	alias ImDrawCallback = void function(const ImDrawList* parent_list,const ImDrawCmd* cmd);
	alias GetClipboardTextFunc = const char* function(void* user_data);
	alias SetClipboardTextFunc = void function(void* user_data,const char* text);
	alias ImeSetInputScreenPosFunc = void function(int x,int y);
}

extern(C) @nogc nothrow
{
    alias da_igGetFrameHeight = float function();
    alias da_igCreateContext = ImGuiContext* function(ImFontAtlas* shared_font_atlas=null);
    alias da_igTextUnformatted = void function(const char* text,const char* text_end=null);
    alias da_igPopFont = void function();
    alias da_igCombo = bool function(const char* label,int* current_item,const char** items,int items_count,int popup_max_height_in_items=-1);
    alias da_igCaptureKeyboardFromApp = void function(bool capture=true);
    alias da_igIsWindowFocused = bool function(ImGuiFocusedFlags flags=0);
    alias da_igRender = void function();
    alias da_ImDrawList_ChannelsSetCurrent = void function(int channel_index);
    alias da_igDragFloat4 = bool function(const char* label,float[4] v,float v_speed=1.0f,float v_min=0.0f,float v_max=0.0f,const char* format="%.3f",float power=1.0f);
    alias da_ImDrawList_ChannelsSplit = void function(int channels_count);
    alias da_igIsMousePosValid = bool function(const ImVec2* mouse_pos=null);
    alias da_igGetCursorScreenPos = ImVec2 function();
    alias da_igDebugCheckVersionAndDataLayout = bool function(const char* version_str,size_t sz_io,size_t sz_style,size_t sz_vec2,size_t sz_vec4,size_t sz_drawvert);
    alias da_igSliderFloat4 = bool function(const char* label,float[4] v,float v_min,float v_max,const char* format="%.3f",float power=1.0f);
    alias da_igSetScrollY = void function(float scroll_y);
    alias da_igGetStateStorage = ImGuiStorage* function();
    alias da_igSetColorEditOptions = void function(ImGuiColorEditFlags flags);
    alias da_ImGuiStorage_GetBoolRef = bool* function(ImGuiID key,bool default_val=false);
    alias da_igInputScalarN = bool function(const char* label,ImGuiDataType data_type,void* v,int components,const void* step=null,const void* step_fast=null,const char* format=null,ImGuiInputTextFlags extra_flags=0);
    alias da_igColorPicker4 = bool function(const char* label,float[4] col,ImGuiColorEditFlags flags=0,const float* ref_col=null);
    alias da_igSetScrollFromPosY = void function(float pos_y,float center_y_ratio=0.5f);
    alias da_ImDrawList_Clear = void function();
    alias da_igGetStyleColorVec4 = const ImVec4* function(ImGuiCol idx);
    alias da_igGetClipboardText = const char* function();
    alias da_igIsMouseHoveringRect = bool function(const ImVec2 r_min,const ImVec2 r_max,bool clip=true);
    alias da_ImColor_SetHSV = void function(float h,float s,float v,float a=1.0f);
    alias da_igDragFloat3 = bool function(const char* label,float[3] v,float v_speed=1.0f,float v_min=0.0f,float v_max=0.0f,const char* format="%.3f",float power=1.0f);
    alias da_ImDrawList_AddPolyline = void function(const ImVec2* points,const int num_points,ImU32 col,bool closed,float thickness);
    alias da_igCalcTextSize = ImVec2 function(const char* text,const char* text_end=null,bool hide_text_after_double_hash=false,float wrap_width=-1.0f);
    alias da_igSetStateStorage = void function(ImGuiStorage* storage);
    alias da_igValue = void function(const char* prefix,bool b);
    alias da_igColumns = void function(int count=1,const char* id=null,bool border=true);
    alias da_ImGuiTextFilter_Build = void function();
    alias da_igGetItemRectMax = ImVec2 function();
    alias da_igIsItemDeactivated = bool function();
    alias da_igPushStyleVar = void function(ImGuiStyleVar idx,float val);
    alias da_igSaveIniSettingsToMemory = const char* function(size_t* out_ini_size=null);
    alias da_ImGuiTextBuffer_size = int function();
    alias da_igDragIntRange2 = bool function(const char* label,int* v_current_min,int* v_current_max,float v_speed=1.0f,int v_min=0,int v_max=0,const char* format="%d",const char* format_max=null);
    alias da_igUnindent = void function(float indent_w=0.0f);
    alias da_ImFontAtlas_AddFontFromMemoryCompressedBase85TTF = ImFont* function(const char* compressed_font_data_base85,float size_pixels,const ImFontConfig* font_cfg=null,const ImWchar* glyph_ranges=null);
    alias da_igPopAllowKeyboardFocus = void function();
    alias da_igLoadIniSettingsFromDisk = void function(const char* ini_filename);
    alias da_igGetCursorStartPos = ImVec2 function();
    alias da_igSetCursorScreenPos = void function(const ImVec2 screen_pos);
    alias da_ImFont_AddRemapChar = void function(ImWchar dst,ImWchar src,bool overwrite_dst=true);
    alias da_ImFont_AddGlyph = void function(ImWchar c,float x0,float y0,float x1,float y1,float u0,float v0,float u1,float v1,float advance_x);
    alias da_igInputInt4 = bool function(const char* label,int[4] v,ImGuiInputTextFlags extra_flags=0);
    alias da_ImFont_GrowIndex = void function(int new_size);
    alias da_ImFont_RenderText = void function(ImDrawList* draw_list,float size,ImVec2 pos,ImU32 col,const ImVec4 clip_rect,const char* text_begin,const char* text_end,float wrap_width=0.0f,bool cpu_fine_clip=false);
    alias da_igIsRectVisible = bool function(const ImVec2 size);
    alias da_ImFontAtlas_Build = bool function();
    alias da_igLabelText = void function(const char* label,const char* fmt,...);
    alias da_ImFont_CalcWordWrapPositionA = const char* function(float scale,const char* text,const char* text_end,float wrap_width);
    alias da_igLogFinish = void function();
    alias da_igIsKeyPressed = bool function(int user_key_index,bool repeat=true);
    alias da_igGetColumnOffset = float function(int column_index=-1);
    alias da_ImDrawList_PopClipRect = void function();
    alias da_ImFont_CalcTextSizeA = ImVec2 function(float size,float max_width,float wrap_width,const char* text_begin,const char* text_end=null,const char** remaining=null);
    alias da_igSetNextWindowCollapsed = void function(bool collapsed,ImGuiCond cond=0);
    alias da_igGetCurrentContext = ImGuiContext* function();
    alias da_igSmallButton = bool function(const char* label);
    alias da_igOpenPopupOnItemClick = bool function(const char* str_id=null,int mouse_button=1);
    alias da_igIsAnyMouseDown = bool function();
    alias da_ImFont_IsLoaded = bool function();
    alias da_ImFont_GetCharAdvance = float function(ImWchar c);
    alias da_ImFont_SetFallbackChar = void function(ImWchar c);
    alias da_ImFont_FindGlyphNoFallback = const ImFontGlyph* function(ImWchar c);
    alias da_igImageButton = bool function(ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0=ImVec2(0,0),const ImVec2 uv1=ImVec2(1,1),int frame_padding=-1,const ImVec4 bg_col=ImVec4(0,0,0,0),const ImVec4 tint_col=ImVec4(1,1,1,1));
    alias da_ImFont_FindGlyph = const ImFontGlyph* function(ImWchar c);
    alias da_igEndFrame = void function();
    alias da_igSliderFloat2 = bool function(const char* label,float[2] v,float v_min,float v_max,const char* format="%.3f",float power=1.0f);
    alias da_ImFont_RenderChar = void function(ImDrawList* draw_list,float size,ImVec2 pos,ImU32 col,ImWchar c);
    alias da_igRadioButton = bool function(const char* label,bool active);
    alias da_ImDrawList_PushClipRect = void function(ImVec2 clip_rect_min,ImVec2 clip_rect_max,bool intersect_with_current_clip_rect=false);
    alias da_igLoadIniSettingsFromMemory = void function(const char* ini_data,size_t ini_size=0);
    alias da_igIsItemDeactivatedAfterEdit = bool function();
    alias da_igGetWindowDrawList = ImDrawList* function();
    alias da_ImDrawList_PathBezierCurveTo = void function(const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,int num_segments=0);
    alias da_ImGuiPayload_Clear = void function();
    alias da_igNewLine = void function();
    alias da_igIsItemFocused = bool function();
    alias da_igSliderInt2 = bool function(const char* label,int[2] v,int v_min,int v_max,const char* format="%d");
    alias da_ImGuiStorage_SetAllInt = void function(int val);
    alias da_igSetWindowSize = void function(const ImVec2 size,ImGuiCond cond=0);
    alias da_igInputFloat = bool function(const char* label,float* v,float step=0.0f,float step_fast=0.0f,const char* format="%.3f",ImGuiInputTextFlags extra_flags=0);
    alias da_ImFontAtlas_CalcCustomRectUV = void function(const CustomRect* rect,ImVec2* out_uv_min,ImVec2* out_uv_max);
    alias da_ImFontAtlas_GetCustomRectByIndex = const CustomRect* function(int index);
    alias da_igColorConvertRGBtoHSV = void function(float r,float g,float b,float out_h,float out_s,float out_v);
    alias da_igBeginMenuBar = bool function();
    alias da_igTextColoredV = void function(const ImVec4 col,const char* fmt,va_list args);
    alias da_igIsPopupOpen = bool function(const char* str_id);
    alias da_igIsItemVisible = bool function();
    alias da_igGetWindowContentRegionMax = ImVec2 function();
    alias da_igTextWrappedV = void function(const char* fmt,va_list args);
    alias da_ImFontAtlas_AddCustomRectRegular = int function(uint id,int width,int height);
    alias da_GlyphRangesBuilder_AddText = void function(const char* text,const char* text_end=null);
    alias da_ImDrawList_UpdateTextureID = void function();
    alias da_CustomRect_IsPacked = bool function();
    alias da_ImGuiInputTextCallbackData_HasSelection = bool function();
    alias da_igSetWindowCollapsed = void function(bool collapsed,ImGuiCond cond=0);
    alias da_igGetMouseDragDelta = ImVec2 function(int button=0,float lock_threshold=-1.0f);
    alias da_igAcceptDragDropPayload = const ImGuiPayload* function(const char* type,ImGuiDragDropFlags flags=0);
    alias da_igBeginDragDropSource = bool function(ImGuiDragDropFlags flags=0);
    alias da_ImDrawList_AddCallback = void function(ImDrawCallback callback,void* callback_data);
    alias da_igPlotLines = void function(const char* label,const float* values,int values_count,int values_offset=0,const char* overlay_text=null,float scale_min=3.40282346638528859812e+38F,float scale_max=3.40282346638528859812e+38F,ImVec2 graph_size=ImVec2(0,0),int stride=4);
    alias da_ImFontAtlas_IsBuilt = bool function();
    alias da_igTextWrapped = void function(const char* fmt,...);
    alias da_GlyphRangesBuilder_AddRanges = void function(const ImWchar* ranges);
    alias da_igGetFrameCount = int function();
    alias da_GlyphRangesBuilder_SetBit = void function(int n);
    alias da_ImDrawList_PathFillConvex = void function(ImU32 col);
    alias da_ImFont_GetDebugName = const char* function();
    alias da_igListBoxHeader = bool function(const char* label,const ImVec2 size=ImVec2(0,0));
    alias da_igPopClipRect = void function();
    alias da_ImFontAtlas_GetGlyphRangesThai = const ImWchar* function();
    alias da_ImFontAtlas_GetGlyphRangesCyrillic = const ImWchar* function();
    alias da_igGetWindowSize = ImVec2 function();
    alias da_ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon = const ImWchar* function();
    alias da_igCheckboxFlags = bool function(const char* label,uint* flags,uint flags_value);
    alias da_ImFontAtlas_GetGlyphRangesChineseFull = const ImWchar* function();
    alias da_igIsWindowHovered = bool function(ImGuiHoveredFlags flags=0);
    alias da_igPlotHistogram = void function(const char* label,const float* values,int values_count,int values_offset=0,const char* overlay_text=null,float scale_min=3.40282346638528859812e+38F,float scale_max=3.40282346638528859812e+38F,ImVec2 graph_size=ImVec2(0,0),int stride=4);
    alias da_igBeginPopupContextVoid = bool function(const char* str_id=null,int mouse_button=1);
    alias da_igShowStyleEditor = void function(ImGuiStyle* ref_=null);
    alias da_igShowUserGuide = void function();
    alias da_igCheckbox = bool function(const char* label,bool* v);
    alias da_igGetWindowPos = ImVec2 function();
    alias da_ImFontAtlas_GetGlyphRangesDefault = const ImWchar* function();
    alias da_ImFontAtlas_SetTexID = void function(ImTextureID id);
    alias da_igTextColored = void function(const ImVec4 col,const char* fmt,...);
    alias da_igLogToFile = void function(int max_depth=-1,const char* filename=null);
    alias da_igButton = bool function(const char* label,const ImVec2 size=ImVec2(0,0));
    alias da_igIsItemEdited = bool function();
    alias da_igTreeNodeExV = bool function(const char* str_id,ImGuiTreeNodeFlags flags,const char* fmt,va_list args);
    alias da_ImDrawList_PushTextureID = void function(ImTextureID texture_id);
    alias da_igTreeAdvanceToLabelPos = void function();
    alias da_ImGuiInputTextCallbackData_DeleteChars = void function(int pos,int bytes_count);
    alias da_igDragInt2 = bool function(const char* label,int[2] v,float v_speed=1.0f,int v_min=0,int v_max=0,const char* format="%d");
    alias da_igArrowButton = bool function(const char* str_id,ImGuiDir dir);
    alias da_igIsAnyItemActive = bool function();
    alias da_ImDrawList_AddBezierCurve = void function(const ImVec2 pos0,const ImVec2 cp0,const ImVec2 cp1,const ImVec2 pos1,ImU32 col,float thickness,int num_segments=0);
    alias da_ImFontAtlas_AddFontFromMemoryCompressedTTF = ImFont* function(const void* compressed_font_data,int compressed_font_size,float size_pixels,const ImFontConfig* font_cfg=null,const ImWchar* glyph_ranges=null);
    alias da_ImFontAtlas_ClearFonts = void function();
    alias da_igDummy = void function(const ImVec2 size);
    alias da_ImFontAtlas_ClearTexData = void function();
    alias da_igGetColumnsCount = int function();
    alias da_igPopButtonRepeat = void function();
    alias da_igDragScalarN = bool function(const char* label,ImGuiDataType data_type,void* v,int components,float v_speed,const void* v_min=null,const void* v_max=null,const char* format=null,float power=1.0f);
    alias da_ImGuiPayload_IsPreview = bool function();
    alias da_igSpacing = void function();
    alias da_ImFontAtlas_Clear = void function();
    alias da_igIsAnyItemFocused = bool function();
    alias da_ImFontAtlas_AddFontFromMemoryTTF = ImFont* function(void* font_data,int font_size,float size_pixels,const ImFontConfig* font_cfg=null,const ImWchar* glyph_ranges=null);
    alias da_ImFontAtlas_AddFontFromFileTTF = ImFont* function(const char* filename,float size_pixels,const ImFontConfig* font_cfg=null,const ImWchar* glyph_ranges=null);
    alias da_igMemFree = void function(void* ptr);
    alias da_igGetFontTexUvWhitePixel = ImVec2 function();
    alias da_ImDrawList_AddDrawCmd = void function();
    alias da_igIsItemClicked = bool function(int mouse_button=0);
    alias da_ImFontAtlas_AddFontDefault = ImFont* function(const ImFontConfig* font_cfg=null);
    alias da_ImFontAtlas_AddFont = ImFont* function(const ImFontConfig* font_cfg);
    alias da_igProgressBar = void function(float fraction,const ImVec2 size_arg=ImVec2(-1,0),const char* overlay=null);
    alias da_igSetNextWindowBgAlpha = void function(float alpha);
    alias da_igBeginPopup = bool function(const char* str_id,ImGuiWindowFlags flags=0);
    alias da_ImFont_BuildLookupTable = void function();
    alias da_igGetScrollX = float function();
    alias da_igGetKeyIndex = int function(ImGuiKey imgui_key);
    alias da_igGetOverlayDrawList = ImDrawList* function();
    alias da_igGetID = ImGuiID function(const char* str_id);
    alias da_ImFontAtlas_GetGlyphRangesJapanese = const ImWchar* function();
    alias da_ImDrawData_ScaleClipRects = void function(const ImVec2 sc);
    alias da_ImDrawData_DeIndexAllBuffers = void function();
    alias da_igIsMouseReleased = bool function(int button);
    alias da_ImDrawData_Clear = void function();
    alias da_igGetItemRectMin = ImVec2 function();
    alias da_igLogText = void function(const char* fmt,...);
    alias da_igSetNextWindowSizeConstraints = void function(const ImVec2 size_min,const ImVec2 size_max,ImGuiSizeCallback custom_callback=null,void* custom_callback_data=null);
    alias da_ImGuiStorage_GetVoidPtr = void* function(ImGuiID key);
    alias da_ImDrawList_UpdateClipRect = void function();
    alias da_ImDrawList_PrimVtx = void function(const ImVec2 pos,const ImVec2 uv,ImU32 col);
    alias da_igGetColorU32 = ImU32 function(ImGuiCol idx,float alpha_mul=1.0f);
    alias da_igVSliderInt = bool function(const char* label,const ImVec2 size,int* v,int v_min,int v_max,const char* format="%d");
    alias da_igInvisibleButton = bool function(const char* str_id,const ImVec2 size);
    alias da_igInputInt2 = bool function(const char* label,int[2] v,ImGuiInputTextFlags extra_flags=0);
    alias da_ImDrawList_PrimRect = void function(const ImVec2 a,const ImVec2 b,ImU32 col);
    alias da_ImDrawList_AddRectFilled = void function(const ImVec2 a,const ImVec2 b,ImU32 col,float rounding=0.0f,int rounding_corners_flags=ImDrawCornerFlags_All);
    alias da_ImDrawList_ClearFreeMemory = void function();
    alias da_ImDrawList_CloneOutput = ImDrawList* function();
    alias da_igSetNextTreeNodeOpen = void function(bool is_open,ImGuiCond cond=0);
    alias da_igLogToTTY = void function(int max_depth=-1);
    alias da_igSetTooltipV = void function(const char* fmt,va_list args);
    alias da_igEndGroup = void function();
    alias da_igGetIO = ImGuiIO* function();
    alias da_igDragInt4 = bool function(const char* label,int[4] v,float v_speed=1.0f,int v_min=0,int v_max=0,const char* format="%d");
    alias da_igNextColumn = void function();
    alias da_ImDrawList_AddRect = void function(const ImVec2 a,const ImVec2 b,ImU32 col,float rounding=0.0f,int rounding_corners_flags=ImDrawCornerFlags_All,float thickness=1.0f);
    alias da_igSetCursorPos = void function(const ImVec2 local_pos);
    alias da_igBeginPopupModal = bool function(const char* name,bool* p_open=null,ImGuiWindowFlags flags=0);
    alias da_igSliderInt4 = bool function(const char* label,int[4] v,int v_min,int v_max,const char* format="%d");
    alias da_ImDrawList_PathRect = void function(const ImVec2 rect_min,const ImVec2 rect_max,float rounding=0.0f,int rounding_corners_flags=ImDrawCornerFlags_All);
    alias da_igShowMetricsWindow = void function(bool* p_open=null);
    alias da_igGetScrollMaxY = float function();
    alias da_igBeginTooltip = void function();
    alias da_ImDrawList_PathArcToFast = void function(const ImVec2 centre,float radius,int a_min_of_12,int a_max_of_12);
    alias da_igGetDrawData = ImDrawData* function();
    alias da_igGetTextLineHeight = float function();
    alias da_igSeparator = void function();
    alias da_igBeginChild = bool function(const char* str_id,const ImVec2 size=ImVec2(0,0),bool border=false,ImGuiWindowFlags flags=0);
    alias da_igIsWindowAppearing = bool function();
    alias da_igIsMouseClicked = bool function(int button,bool repeat=false);
    alias da_igCalcItemWidth = float function();
    alias da_ImGuiTextBuffer_appendfv = void function(const char* fmt,va_list args);
    alias da_ImDrawList_PathStroke = void function(ImU32 col,bool closed,float thickness=1.0f);
    alias da_igEndChildFrame = void function();
    alias da_igIndent = void function(float indent_w=0.0f);
    alias da_igSetDragDropPayload = bool function(const char* type,const void* data,size_t size,ImGuiCond cond=0);
    alias da_GlyphRangesBuilder_GetBit = bool function(int n);
    alias da_igSetScrollHereY = void function(float center_y_ratio=0.5f);
    alias da_igShowDemoWindow = void function(bool* p_open=null);
    alias da_ImDrawList_PathLineToMergeDuplicate = void function(const ImVec2 pos);
    alias da_igSetScrollX = void function(float scroll_x);
    alias da_igIsKeyReleased = bool function(int user_key_index);
    alias da_igEndMenu = void function();
    alias da_igColorButton = bool function(const char* desc_id,const ImVec4 col,ImGuiColorEditFlags flags=0,ImVec2 size=ImVec2(0,0));
    alias da_ImFontAtlas_GetTexDataAsAlpha8 = void function(char** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel=null);
    alias da_ImDrawList_AddConvexPolyFilled = void function(const ImVec2* points,const int num_points,ImU32 col);
    alias da_igSetClipboardText = void function(const char* text);
    alias da_ImDrawList_PathArcTo = void function(const ImVec2 centre,float radius,float a_min,float a_max,int num_segments=10);
    alias da_ImDrawList_AddImageQuad = void function(ImTextureID user_texture_id,const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 d,const ImVec2 uv_a=ImVec2(0,0),const ImVec2 uv_b=ImVec2(1,0),const ImVec2 uv_c=ImVec2(1,1),const ImVec2 uv_d=ImVec2(0,1),ImU32 col=0xFFFFFFFF);
    alias da_igIsWindowCollapsed = bool function();
    alias da_ImDrawList_AddImage = void function(ImTextureID user_texture_id,const ImVec2 a,const ImVec2 b,const ImVec2 uv_a=ImVec2(0,0),const ImVec2 uv_b=ImVec2(1,1),ImU32 col=0xFFFFFFFF);
    alias da_ImDrawList_AddText = void function(const ImVec2 pos,ImU32 col,const char* text_begin,const char* text_end=null);
    alias da_igSetNextWindowFocus = void function();
    alias da_igSameLine = void function(float pos_x=0.0f,float spacing_w=-1.0f);
    alias da_igBegin = bool function(const char* name,bool* p_open=null,ImGuiWindowFlags flags=0);
    alias da_igColorEdit3 = bool function(const char* label,float[3] col,ImGuiColorEditFlags flags=0);
    alias da_ImDrawList_AddCircleFilled = void function(const ImVec2 centre,float radius,ImU32 col,int num_segments=12);
    alias da_ImGuiIO_AddInputCharactersUTF8 = void function(const char* utf8_chars);
    alias da_ImDrawList_AddCircle = void function(const ImVec2 centre,float radius,ImU32 col,int num_segments=12,float thickness=1.0f);
    alias da_ImDrawList_AddTriangleFilled = void function(const ImVec2 a,const ImVec2 b,const ImVec2 c,ImU32 col);
    alias da_igDragFloat2 = bool function(const char* label,float[2] v,float v_speed=1.0f,float v_min=0.0f,float v_max=0.0f,const char* format="%.3f",float power=1.0f);
    alias da_igPushButtonRepeat = void function(bool repeat);
    alias da_igPopItemWidth = void function();
    alias da_ImDrawList_AddTriangle = void function(const ImVec2 a,const ImVec2 b,const ImVec2 c,ImU32 col,float thickness=1.0f);
    alias da_ImDrawList_AddQuadFilled = void function(const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 d,ImU32 col);
    alias da_ImDrawList_AddQuad = void function(const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 d,ImU32 col,float thickness=1.0f);
    alias da_ImDrawList_AddRectFilledMultiColor = void function(const ImVec2 a,const ImVec2 b,ImU32 col_upr_left,ImU32 col_upr_right,ImU32 col_bot_right,ImU32 col_bot_left);
    alias da_igGetFontSize = float function();
    alias da_igInputDouble = bool function(const char* label,double* v,double step=0.0f,double step_fast=0.0f,const char* format="%.6f",ImGuiInputTextFlags extra_flags=0);
    alias da_ImDrawList_PrimReserve = void function(int idx_count,int vtx_count);
    alias da_ImDrawList_AddLine = void function(const ImVec2 a,const ImVec2 b,ImU32 col,float thickness=1.0f);
    alias da_igEndPopup = void function();
    alias da_ImFontAtlas_ClearInputData = void function();
    alias da_ImDrawList_GetClipRectMin = ImVec2 function();
    alias da_igInputTextMultiline = bool function(const char* label,char* buf,size_t buf_size,const ImVec2 size=ImVec2(0,0),ImGuiInputTextFlags flags=0,ImGuiInputTextCallback callback=null,void* user_data=null);
    alias da_igSelectable = bool function(const char* label,bool selected=false,ImGuiSelectableFlags flags=0,const ImVec2 size=ImVec2(0,0));
    alias da_igListBox = bool function(const char* label,int* current_item,const char** items,int items_count,int height_in_items=-1);
    alias da_ImDrawList_PopTextureID = void function();
    alias da_igSetWindowFocus = void function();
    alias da_igInputFloat4 = bool function(const char* label,float[4] v,const char* format="%.3f",ImGuiInputTextFlags extra_flags=0);
    alias da_igGetVersion = const char* function();
    alias da_igEndCombo = void function();
    alias da_igPushID = void function(const char* str_id);
    alias da_ImGuiListClipper_End = void function();
    alias da_ImGuiListClipper_Begin = void function(int items_count,float items_height=-1.0f);
    alias da_igGetDragDropPayload = const ImGuiPayload* function();
    alias da_igAlignTextToFramePadding = void function();
    alias da_igPopStyleColor = void function(int count=1);
    alias da_ImGuiListClipper_Step = bool function();
    alias da_igText = void function(const char* fmt,...);
    alias da_igBeginMenu = bool function(const char* label,bool enabled=true);
    alias da_ImGuiStorage_GetFloatRef = float* function(ImGuiID key,float default_val=0.0f);
    alias da_igEndTooltip = void function();
    alias da_igTextV = void function(const char* fmt,va_list args);
    alias da_igDragInt = bool function(const char* label,int* v,float v_speed=1.0f,int v_min=0,int v_max=0,const char* format="%d");
    alias da_igColorConvertFloat4ToU32 = ImU32 function(const ImVec4 in_);
    alias da_ImGuiIO_ClearInputCharacters = void function();
    alias da_ImGuiPayload_IsDataType = bool function(const char* type);
    alias da_igPushClipRect = void function(const ImVec2 clip_rect_min,const ImVec2 clip_rect_max,bool intersect_with_current_clip_rect);
    alias da_igSetColumnWidth = void function(int column_index,float width);
    alias da_igBeginMainMenuBar = bool function();
    alias da_ImGuiInputTextCallbackData_InsertChars = void function(int pos,const char* text,const char* text_end=null);
    alias da_ImGuiStorage_GetFloat = float function(ImGuiID key,float default_val=0.0f);
    alias da_ImFontAtlas_GetMouseCursorTexData = bool function(ImGuiMouseCursor cursor,ImVec2* out_offset,ImVec2* out_size,ImVec2[2] out_uv_border,ImVec2[2] out_uv_fill);
    alias da_igVSliderScalar = bool function(const char* label,const ImVec2 size,ImGuiDataType data_type,void* v,const void* v_min,const void* v_max,const char* format=null,float power=1.0f);
    alias da_ImGuiStorage_GetVoidPtrRef = void** function(ImGuiID key,void* default_val=null);
    alias da_igStyleColorsLight = void function(ImGuiStyle* dst=null);
    alias da_igSliderFloat3 = bool function(const char* label,float[3] v,float v_min,float v_max,const char* format="%.3f",float power=1.0f);
    alias da_igSetAllocatorFunctions = void function(ImGuiAllocFunc,ImGuiFreeFunc,void* user_data=null);
    alias da_igDragFloat = bool function(const char* label,float* v,float v_speed=1.0f,float v_min=0.0f,float v_max=0.0f,const char* format="%.3f",float power=1.0f);
    alias da_ImGuiStorage_GetIntRef = int* function(ImGuiID key,int default_val=0);
    alias da_igGetWindowHeight = float function();
    alias da_igGetMousePosOnOpeningCurrentPopup = ImVec2 function();
    alias da_ImGuiStorage_SetVoidPtr = void function(ImGuiID key,void* val);
    alias da_igCalcListClipping = void function(int items_count,float items_height,int* out_items_display_start,int* out_items_display_end);
    alias da_ImGuiStorage_SetFloat = void function(ImGuiID key,float val);
    alias da_igEndDragDropSource = void function();
    alias da_ImGuiStorage_BuildSortByKey = void function();
    alias da_ImGuiStorage_SetBool = void function(ImGuiID key,bool val);
    alias da_ImGuiStorage_GetBool = bool function(ImGuiID key,bool default_val=false);
    alias da_ImGuiStorage_SetInt = void function(ImGuiID key,int val);
    alias da_igLabelTextV = void function(const char* label,const char* fmt,va_list args);
    alias da_igGetFrameHeightWithSpacing = float function();
    alias da_igTreeNodeEx = bool function(const char* label,ImGuiTreeNodeFlags flags=0);
    alias da_igCloseCurrentPopup = void function();
    alias da_ImGuiTextBuffer_clear = void function();
    alias da_ImGuiStorage_Clear = void function();
    alias da_ImGuiTextBuffer_appendf = void function(const char* fmt,...);
    alias da_ImGuiTextBuffer_c_str = const char* function();
    alias da_ImGuiTextBuffer_reserve = void function(int capacity);
    alias da_ImGuiTextBuffer_empty = bool function();
    alias da_igSliderScalar = bool function(const char* label,ImGuiDataType data_type,void* v,const void* v_min,const void* v_max,const char* format=null,float power=1.0f);
    alias da_igTreePush = void function(const char* str_id);
    alias da_igListBoxFooter = void function();
    alias da_igTextDisabled = void function(const char* fmt,...);
    alias da_igIsItemHovered = bool function(ImGuiHoveredFlags flags=0);
    alias da_ImDrawList_PrimWriteVtx = void function(const ImVec2 pos,const ImVec2 uv,ImU32 col);
    alias da_igBullet = void function();
    alias da_igInputInt3 = bool function(const char* label,int[3] v,ImGuiInputTextFlags extra_flags=0);
    alias da_TextRange_end = const char* function();
    alias da_igStyleColorsDark = void function(ImGuiStyle* dst=null);
    alias da_igInputInt = bool function(const char* label,int* v,int step=1,int step_fast=100,ImGuiInputTextFlags extra_flags=0);
    alias da_igSetWindowFontScale = void function(float scale);
    alias da_igSliderInt = bool function(const char* label,int* v,int v_min,int v_max,const char* format="%d");
    alias da_TextRange_begin = const char* function();
    alias da_igSetNextWindowPos = void function(const ImVec2 pos,ImGuiCond cond=0,const ImVec2 pivot=ImVec2(0,0));
    alias da_igDragInt3 = bool function(const char* label,int[3] v,float v_speed=1.0f,int v_min=0,int v_max=0,const char* format="%d");
    alias da_igOpenPopup = void function(const char* str_id);
    alias da_igSetColumnOffset = void function(int column_index,float offset_x);
    alias da_ImDrawList_GetClipRectMax = ImVec2 function();
    alias da_igBeginCombo = bool function(const char* label,const char* preview_value,ImGuiComboFlags flags=0);
    alias da_igGetDrawListSharedData = ImDrawListSharedData* function();
    alias da_ImGuiTextFilter_Draw = bool function(const char* label="Filter(inc,-exc)",float width=0.0f);
    alias da_igIsItemActive = bool function();
    alias da_igBeginDragDropTarget = bool function();
    alias da_TextRange_empty = bool function();
    alias da_ImGuiPayload_IsDelivery = bool function();
    alias da_ImGuiIO_AddInputCharacter = void function(ImWchar c);
    alias da_ImDrawList_AddImageRounded = void function(ImTextureID user_texture_id,const ImVec2 a,const ImVec2 b,const ImVec2 uv_a,const ImVec2 uv_b,ImU32 col,float rounding,int rounding_corners=ImDrawCornerFlags_All);
    alias da_igPushStyleColor = void function(ImGuiCol idx,ImU32 col);
    alias da_igGetContentRegionMax = ImVec2 function();
    alias da_igBeginChildFrame = bool function(ImGuiID id,const ImVec2 size,ImGuiWindowFlags flags=0);
    alias da_igSaveIniSettingsToDisk = void function(const char* ini_filename);
    alias da_ImFont_ClearOutputData = void function();
    alias da_ImDrawList_PrimQuadUV = void function(const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 d,const ImVec2 uv_a,const ImVec2 uv_b,const ImVec2 uv_c,const ImVec2 uv_d,ImU32 col);
    alias da_igEndDragDropTarget = void function();
    alias da_ImFontAtlas_GetGlyphRangesKorean = const ImWchar* function();
    alias da_igGetKeyPressedAmount = int function(int key_index,float repeat_delay,float rate);
    alias da_ImFontAtlas_GetTexDataAsRGBA32 = void function(char** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel=null);
    alias da_igNewFrame = void function();
    alias da_igResetMouseDragDelta = void function(int button=0);
    alias da_igGetTreeNodeToLabelSpacing = float function();
    alias da_igGetMousePos = ImVec2 function();
    alias da_GlyphRangesBuilder_AddChar = void function(ImWchar c);
    alias da_igPopID = void function();
    alias da_igIsMouseDoubleClicked = bool function(int button);
    alias da_igSetNextWindowSize = void function(const ImVec2 size,ImGuiCond cond=0);
    alias da_ImGuiTextFilter_IsActive = bool function();
    alias da_ImDrawList_PathClear = void function();
    alias da_igBeginGroup = void function();
    alias da_igColorConvertHSVtoRGB = void function(float h,float s,float v,float out_r,float out_g,float out_b);
    alias da_igVSliderFloat = bool function(const char* label,const ImVec2 size,float* v,float v_min,float v_max,const char* format="%.3f",float power=1.0f);
    alias da_igColorConvertU32ToFloat4 = ImVec4 function(ImU32 in_);
    alias da_igPopTextWrapPos = void function();
    alias da_ImGuiTextFilter_Clear = void function();
    alias da_igGetColumnWidth = float function(int column_index=-1);
    alias da_igEndMenuBar = void function();
    alias da_igGetStyleColorName = const char* function(ImGuiCol idx);
    alias da_igIsMouseDragging = bool function(int button=0,float lock_threshold=-1.0f);
    alias da_ImDrawList_PrimWriteIdx = void function(ImDrawIdx idx);
    alias da_ImGuiStyle_ScaleAllSizes = void function(float scale_factor);
    alias da_igGetItemRectSize = ImVec2 function();
    alias da_igMemAlloc = void* function(size_t size);
    alias da_igColorPicker3 = bool function(const char* label,float[3] col,ImGuiColorEditFlags flags=0);
    alias da_igSetCurrentContext = void function(ImGuiContext* ctx);
    alias da_igPushItemWidth = void function(float item_width);
    alias da_igGetStyle = ImGuiStyle* function();
    alias da_igSetItemAllowOverlap = void function();
    alias da_igEndChild = void function();
    alias da_igCollapsingHeader = bool function(const char* label,ImGuiTreeNodeFlags flags=0);
    alias da_igTextDisabledV = void function(const char* fmt,va_list args);
    alias da_igDragFloatRange2 = bool function(const char* label,float* v_current_min,float* v_current_max,float v_speed=1.0f,float v_min=0.0f,float v_max=0.0f,const char* format="%.3f",const char* format_max=null,float power=1.0f);
    alias da_igSetMouseCursor = void function(ImGuiMouseCursor type);
    alias da_igShowFontSelector = void function(const char* label);
    alias da_igInputScalar = bool function(const char* label,ImGuiDataType data_type,void* v,const void* step=null,const void* step_fast=null,const char* format=null,ImGuiInputTextFlags extra_flags=0);
    alias da_ImDrawList_PushClipRectFullScreen = void function();
    alias da_igShowStyleSelector = bool function(const char* label);
    alias da_igGetTime = double function();
    alias da_ImDrawList_ChannelsMerge = void function();
    alias da_igGetColumnIndex = int function();
    alias da_igBeginPopupContextItem = bool function(const char* str_id=null,int mouse_button=1);
    alias da_igGetCursorPosX = float function();
    alias da_igEndMainMenuBar = void function();
    alias da_igSetCursorPosX = void function(float x);
    alias da_igGetMouseCursor = ImGuiMouseCursor function();
    alias da_igMenuItem = bool function(const char* label,const char* shortcut=null,bool selected=false,bool enabled=true);
    alias da_igGetScrollY = float function();
    alias da_igPushAllowKeyboardFocus = void function(bool allow_keyboard_focus);
    alias da_ImGuiTextBuffer_begin = const char* function();
    alias da_igSetCursorPosY = void function(float y);
    alias da_igSetWindowPos = void function(const ImVec2 pos,ImGuiCond cond=0);
    alias da_igGetCursorPosY = float function();
    alias da_ImFontAtlas_AddCustomRectFontGlyph = int function(ImFont* font,ImWchar id,int width,int height,float advance_x,const ImVec2 offset=ImVec2(0,0));
    alias da_igBulletTextV = void function(const char* fmt,va_list args);
    alias da_igGetContentRegionAvailWidth = float function();
    alias da_igEnd = void function();
    alias da_igIsKeyDown = bool function(int user_key_index);
    alias da_igIsMouseDown = bool function(int button);
    alias da_igGetCursorPos = ImVec2 function();
    alias da_igLogButtons = void function();
    alias da_igDestroyContext = void function(ImGuiContext* ctx=null);
    alias da_igSliderAngle = bool function(const char* label,float* v_rad,float v_degrees_min=-360.0f,float v_degrees_max=+360.0f,const char* format="%.0f deg");
    alias da_igSetNextWindowContentSize = void function(const ImVec2 size);
    alias da_igGetWindowWidth = float function();
    alias da_igGetWindowContentRegionMin = ImVec2 function();
    alias da_ImGuiStorage_GetInt = int function(ImGuiID key,int default_val=0);
    alias da_igSliderInt3 = bool function(const char* label,int[3] v,int v_min,int v_max,const char* format="%d");
    alias da_igPushTextWrapPos = void function(float wrap_pos_x=0.0f);
    alias da_igSliderScalarN = bool function(const char* label,ImGuiDataType data_type,void* v,int components,const void* v_min,const void* v_max,const char* format=null,float power=1.0f);
    alias da_ImColor_HSV = ImColor function(float h,float s,float v,float a=1.0f);
    alias da_ImDrawList_PathLineTo = void function(const ImVec2 pos);
    alias da_igStyleColorsClassic = void function(ImGuiStyle* dst=null);
    alias da_igSliderFloat = bool function(const char* label,float* v,float v_min,float v_max,const char* format="%.3f",float power=1.0f);
    alias da_igImage = void function(ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0=ImVec2(0,0),const ImVec2 uv1=ImVec2(1,1),const ImVec4 tint_col=ImVec4(1,1,1,1),const ImVec4 border_col=ImVec4(0,0,0,0));
    alias da_igBulletText = void function(const char* fmt,...);
    alias da_igInputFloat2 = bool function(const char* label,float[2] v,const char* format="%.3f",ImGuiInputTextFlags extra_flags=0);
    alias da_igGetTextLineHeightWithSpacing = float function();
    alias da_ImDrawList_PrimRectUV = void function(const ImVec2 a,const ImVec2 b,const ImVec2 uv_a,const ImVec2 uv_b,ImU32 col);
    alias da_igColorEdit4 = bool function(const char* label,float[4] col,ImGuiColorEditFlags flags=0);
    alias da_igLogToClipboard = void function(int max_depth=-1);
    alias da_igBeginPopupContextWindow = bool function(const char* str_id=null,int mouse_button=1,bool also_over_items=true);
    alias da_igDragScalar = bool function(const char* label,ImGuiDataType data_type,void* v,float v_speed,const void* v_min=null,const void* v_max=null,const char* format=null,float power=1.0f);
    alias da_igSetItemDefaultFocus = void function();
    alias da_igCaptureMouseFromApp = void function(bool capture=true);
    alias da_igIsAnyItemHovered = bool function();
    alias da_igPushFont = void function(ImFont* font);
    alias da_igTreePop = void function();
    alias da_igGetWindowContentRegionWidth = float function();
    alias da_igInputText = bool function(const char* label,char* buf,size_t buf_size,ImGuiInputTextFlags flags=0,ImGuiInputTextCallback callback=null,void* user_data=null);
    alias da_ImGuiTextBuffer_end = const char* function();
    alias da_igPopStyleVar = void function(int count=1);
    alias da_ImGuiTextFilter_PassFilter = bool function(const char* text,const char* text_end=null);
    alias da_igGetFont = ImFont* function();
    alias da_igTreeNode = bool function(const char* label);
    alias da_igTreeNodeV = bool function(const char* str_id,const char* fmt,va_list args);
    alias da_igGetScrollMaxX = float function();
    alias da_igSetTooltip = void function(const char* fmt,...);
    alias da_igGetContentRegionAvail = ImVec2 function();
    alias da_igInputFloat3 = bool function(const char* label,float[3] v,const char* format="%.3f",ImGuiInputTextFlags extra_flags=0);
    alias da_igSetKeyboardFocusHere = void function(int offset=0);
}

__gshared
{
	da_igGetFrameHeight igGetFrameHeight;
	da_igCreateContext igCreateContext;
	da_igTextUnformatted igTextUnformatted;
	da_igPopFont igPopFont;
	da_igCombo igCombo;
	da_igCaptureKeyboardFromApp igCaptureKeyboardFromApp;
	da_igIsWindowFocused igIsWindowFocused;
	da_igRender igRender;
	da_ImDrawList_ChannelsSetCurrent ImDrawList_ChannelsSetCurrent;
	da_igDragFloat4 igDragFloat4;
	da_ImDrawList_ChannelsSplit ImDrawList_ChannelsSplit;
	da_igIsMousePosValid igIsMousePosValid;
	da_igGetCursorScreenPos igGetCursorScreenPos;
	da_igDebugCheckVersionAndDataLayout igDebugCheckVersionAndDataLayout;
	da_igSliderFloat4 igSliderFloat4;
	da_igSetScrollY igSetScrollY;
	da_igGetStateStorage igGetStateStorage;
	da_igSetColorEditOptions igSetColorEditOptions;
	da_ImGuiStorage_GetBoolRef ImGuiStorage_GetBoolRef;
	da_igInputScalarN igInputScalarN;
	da_igColorPicker4 igColorPicker4;
	da_igSetScrollFromPosY igSetScrollFromPosY;
	da_ImDrawList_Clear ImDrawList_Clear;
	da_igGetStyleColorVec4 igGetStyleColorVec4;
	da_igGetClipboardText igGetClipboardText;
	da_igIsMouseHoveringRect igIsMouseHoveringRect;
	da_ImColor_SetHSV ImColor_SetHSV;
	da_igDragFloat3 igDragFloat3;
	da_ImDrawList_AddPolyline ImDrawList_AddPolyline;
	da_igCalcTextSize igCalcTextSize;
	da_igSetStateStorage igSetStateStorage;
	da_igValue igValue;
	da_igColumns igColumns;
	da_ImGuiTextFilter_Build ImGuiTextFilter_Build;
	da_igGetItemRectMax igGetItemRectMax;
	da_igIsItemDeactivated igIsItemDeactivated;
	da_igPushStyleVar igPushStyleVar;
	da_igSaveIniSettingsToMemory igSaveIniSettingsToMemory;
	da_ImGuiTextBuffer_size ImGuiTextBuffer_size;
	da_igDragIntRange2 igDragIntRange2;
	da_igUnindent igUnindent;
	da_ImFontAtlas_AddFontFromMemoryCompressedBase85TTF ImFontAtlas_AddFontFromMemoryCompressedBase85TTF;
	da_igPopAllowKeyboardFocus igPopAllowKeyboardFocus;
	da_igLoadIniSettingsFromDisk igLoadIniSettingsFromDisk;
	da_igGetCursorStartPos igGetCursorStartPos;
	da_igSetCursorScreenPos igSetCursorScreenPos;
	da_ImFont_AddRemapChar ImFont_AddRemapChar;
	da_ImFont_AddGlyph ImFont_AddGlyph;
	da_igInputInt4 igInputInt4;
	da_ImFont_GrowIndex ImFont_GrowIndex;
	da_ImFont_RenderText ImFont_RenderText;
	da_igIsRectVisible igIsRectVisible;
	da_ImFontAtlas_Build ImFontAtlas_Build;
	da_igLabelText igLabelText;
	da_ImFont_CalcWordWrapPositionA ImFont_CalcWordWrapPositionA;
	da_igLogFinish igLogFinish;
	da_igIsKeyPressed igIsKeyPressed;
	da_igGetColumnOffset igGetColumnOffset;
	da_ImDrawList_PopClipRect ImDrawList_PopClipRect;
	da_ImFont_CalcTextSizeA ImFont_CalcTextSizeA;
	da_igSetNextWindowCollapsed igSetNextWindowCollapsed;
	da_igGetCurrentContext igGetCurrentContext;
	da_igSmallButton igSmallButton;
	da_igOpenPopupOnItemClick igOpenPopupOnItemClick;
	da_igIsAnyMouseDown igIsAnyMouseDown;
	da_ImFont_IsLoaded ImFont_IsLoaded;
	da_ImFont_GetCharAdvance ImFont_GetCharAdvance;
	da_ImFont_SetFallbackChar ImFont_SetFallbackChar;
	da_ImFont_FindGlyphNoFallback ImFont_FindGlyphNoFallback;
	da_igImageButton igImageButton;
	da_ImFont_FindGlyph ImFont_FindGlyph;
	da_igEndFrame igEndFrame;
	da_igSliderFloat2 igSliderFloat2;
	da_ImFont_RenderChar ImFont_RenderChar;
	da_igRadioButton igRadioButton;
	da_ImDrawList_PushClipRect ImDrawList_PushClipRect;
	da_igLoadIniSettingsFromMemory igLoadIniSettingsFromMemory;
	da_igIsItemDeactivatedAfterEdit igIsItemDeactivatedAfterEdit;
	da_igGetWindowDrawList igGetWindowDrawList;
	da_ImDrawList_PathBezierCurveTo ImDrawList_PathBezierCurveTo;
	da_ImGuiPayload_Clear ImGuiPayload_Clear;
	da_igNewLine igNewLine;
	da_igIsItemFocused igIsItemFocused;
	da_igSliderInt2 igSliderInt2;
	da_ImGuiStorage_SetAllInt ImGuiStorage_SetAllInt;
	da_igSetWindowSize igSetWindowSize;
	da_igInputFloat igInputFloat;
	da_ImFontAtlas_CalcCustomRectUV ImFontAtlas_CalcCustomRectUV;
	da_ImFontAtlas_GetCustomRectByIndex ImFontAtlas_GetCustomRectByIndex;
	da_igColorConvertRGBtoHSV igColorConvertRGBtoHSV;
	da_igBeginMenuBar igBeginMenuBar;
	da_igTextColoredV igTextColoredV;
	da_igIsPopupOpen igIsPopupOpen;
	da_igIsItemVisible igIsItemVisible;
	da_igGetWindowContentRegionMax igGetWindowContentRegionMax;
	da_igTextWrappedV igTextWrappedV;
	da_ImFontAtlas_AddCustomRectRegular ImFontAtlas_AddCustomRectRegular;
	da_GlyphRangesBuilder_AddText GlyphRangesBuilder_AddText;
	da_ImDrawList_UpdateTextureID ImDrawList_UpdateTextureID;
	da_CustomRect_IsPacked CustomRect_IsPacked;
	da_ImGuiInputTextCallbackData_HasSelection ImGuiInputTextCallbackData_HasSelection;
	da_igSetWindowCollapsed igSetWindowCollapsed;
	da_igGetMouseDragDelta igGetMouseDragDelta;
	da_igAcceptDragDropPayload igAcceptDragDropPayload;
	da_igBeginDragDropSource igBeginDragDropSource;
	da_ImDrawList_AddCallback ImDrawList_AddCallback;
	da_igPlotLines igPlotLines;
	da_ImFontAtlas_IsBuilt ImFontAtlas_IsBuilt;
	da_igTextWrapped igTextWrapped;
	da_GlyphRangesBuilder_AddRanges GlyphRangesBuilder_AddRanges;
	da_igGetFrameCount igGetFrameCount;
	da_GlyphRangesBuilder_SetBit GlyphRangesBuilder_SetBit;
	da_ImDrawList_PathFillConvex ImDrawList_PathFillConvex;
	da_ImFont_GetDebugName ImFont_GetDebugName;
	da_igListBoxHeader igListBoxHeader;
	da_igPopClipRect igPopClipRect;
	da_ImFontAtlas_GetGlyphRangesThai ImFontAtlas_GetGlyphRangesThai;
	da_ImFontAtlas_GetGlyphRangesCyrillic ImFontAtlas_GetGlyphRangesCyrillic;
	da_igGetWindowSize igGetWindowSize;
	da_ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon;
	da_igCheckboxFlags igCheckboxFlags;
	da_ImFontAtlas_GetGlyphRangesChineseFull ImFontAtlas_GetGlyphRangesChineseFull;
	da_igIsWindowHovered igIsWindowHovered;
	da_igPlotHistogram igPlotHistogram;
	da_igBeginPopupContextVoid igBeginPopupContextVoid;
	da_igShowStyleEditor igShowStyleEditor;
	da_igShowUserGuide igShowUserGuide;
	da_igCheckbox igCheckbox;
	da_igGetWindowPos igGetWindowPos;
	da_ImFontAtlas_GetGlyphRangesDefault ImFontAtlas_GetGlyphRangesDefault;
	da_ImFontAtlas_SetTexID ImFontAtlas_SetTexID;
	da_igTextColored igTextColored;
	da_igLogToFile igLogToFile;
	da_igButton igButton;
	da_igIsItemEdited igIsItemEdited;
	da_igTreeNodeExV igTreeNodeExV;
	da_ImDrawList_PushTextureID ImDrawList_PushTextureID;
	da_igTreeAdvanceToLabelPos igTreeAdvanceToLabelPos;
	da_ImGuiInputTextCallbackData_DeleteChars ImGuiInputTextCallbackData_DeleteChars;
	da_igDragInt2 igDragInt2;
	da_igArrowButton igArrowButton;
	da_igIsAnyItemActive igIsAnyItemActive;
	da_ImDrawList_AddBezierCurve ImDrawList_AddBezierCurve;
	da_ImFontAtlas_AddFontFromMemoryCompressedTTF ImFontAtlas_AddFontFromMemoryCompressedTTF;
	da_ImFontAtlas_ClearFonts ImFontAtlas_ClearFonts;
	da_igDummy igDummy;
	da_ImFontAtlas_ClearTexData ImFontAtlas_ClearTexData;
	da_igGetColumnsCount igGetColumnsCount;
	da_igPopButtonRepeat igPopButtonRepeat;
	da_igDragScalarN igDragScalarN;
	da_ImGuiPayload_IsPreview ImGuiPayload_IsPreview;
	da_igSpacing igSpacing;
	da_ImFontAtlas_Clear ImFontAtlas_Clear;
	da_igIsAnyItemFocused igIsAnyItemFocused;
	da_ImFontAtlas_AddFontFromMemoryTTF ImFontAtlas_AddFontFromMemoryTTF;
	da_ImFontAtlas_AddFontFromFileTTF ImFontAtlas_AddFontFromFileTTF;
	da_igMemFree igMemFree;
	da_igGetFontTexUvWhitePixel igGetFontTexUvWhitePixel;
	da_ImDrawList_AddDrawCmd ImDrawList_AddDrawCmd;
	da_igIsItemClicked igIsItemClicked;
	da_ImFontAtlas_AddFontDefault ImFontAtlas_AddFontDefault;
	da_ImFontAtlas_AddFont ImFontAtlas_AddFont;
	da_igProgressBar igProgressBar;
	da_igSetNextWindowBgAlpha igSetNextWindowBgAlpha;
	da_igBeginPopup igBeginPopup;
	da_ImFont_BuildLookupTable ImFont_BuildLookupTable;
	da_igGetScrollX igGetScrollX;
	da_igGetKeyIndex igGetKeyIndex;
	da_igGetOverlayDrawList igGetOverlayDrawList;
	da_igGetID igGetID;
	da_ImFontAtlas_GetGlyphRangesJapanese ImFontAtlas_GetGlyphRangesJapanese;
	da_ImDrawData_ScaleClipRects ImDrawData_ScaleClipRects;
	da_ImDrawData_DeIndexAllBuffers ImDrawData_DeIndexAllBuffers;
	da_igIsMouseReleased igIsMouseReleased;
	da_ImDrawData_Clear ImDrawData_Clear;
	da_igGetItemRectMin igGetItemRectMin;
	da_igLogText igLogText;
	da_igSetNextWindowSizeConstraints igSetNextWindowSizeConstraints;
	da_ImGuiStorage_GetVoidPtr ImGuiStorage_GetVoidPtr;
	da_ImDrawList_UpdateClipRect ImDrawList_UpdateClipRect;
	da_ImDrawList_PrimVtx ImDrawList_PrimVtx;
	da_igGetColorU32 igGetColorU32;
	da_igVSliderInt igVSliderInt;
	da_igInvisibleButton igInvisibleButton;
	da_igInputInt2 igInputInt2;
	da_ImDrawList_PrimRect ImDrawList_PrimRect;
	da_ImDrawList_AddRectFilled ImDrawList_AddRectFilled;
	da_ImDrawList_ClearFreeMemory ImDrawList_ClearFreeMemory;
	da_ImDrawList_CloneOutput ImDrawList_CloneOutput;
	da_igSetNextTreeNodeOpen igSetNextTreeNodeOpen;
	da_igLogToTTY igLogToTTY;
	da_igSetTooltipV igSetTooltipV;
	da_igEndGroup igEndGroup;
	da_igGetIO igGetIO;
	da_igDragInt4 igDragInt4;
	da_igNextColumn igNextColumn;
	da_ImDrawList_AddRect ImDrawList_AddRect;
	da_igSetCursorPos igSetCursorPos;
	da_igBeginPopupModal igBeginPopupModal;
	da_igSliderInt4 igSliderInt4;
	da_ImDrawList_PathRect ImDrawList_PathRect;
	da_igShowMetricsWindow igShowMetricsWindow;
	da_igGetScrollMaxY igGetScrollMaxY;
	da_igBeginTooltip igBeginTooltip;
	da_ImDrawList_PathArcToFast ImDrawList_PathArcToFast;
	da_igGetDrawData igGetDrawData;
	da_igGetTextLineHeight igGetTextLineHeight;
	da_igSeparator igSeparator;
	da_igBeginChild igBeginChild;
	da_igIsWindowAppearing igIsWindowAppearing;
	da_igIsMouseClicked igIsMouseClicked;
	da_igCalcItemWidth igCalcItemWidth;
	da_ImGuiTextBuffer_appendfv ImGuiTextBuffer_appendfv;
	da_ImDrawList_PathStroke ImDrawList_PathStroke;
	da_igEndChildFrame igEndChildFrame;
	da_igIndent igIndent;
	da_igSetDragDropPayload igSetDragDropPayload;
	da_GlyphRangesBuilder_GetBit GlyphRangesBuilder_GetBit;
	da_igSetScrollHereY igSetScrollHereY;
	da_igShowDemoWindow igShowDemoWindow;
	da_ImDrawList_PathLineToMergeDuplicate ImDrawList_PathLineToMergeDuplicate;
	da_igSetScrollX igSetScrollX;
	da_igIsKeyReleased igIsKeyReleased;
	da_igEndMenu igEndMenu;
	da_igColorButton igColorButton;
	da_ImFontAtlas_GetTexDataAsAlpha8 ImFontAtlas_GetTexDataAsAlpha8;
	da_ImDrawList_AddConvexPolyFilled ImDrawList_AddConvexPolyFilled;
	da_igSetClipboardText igSetClipboardText;
	da_ImDrawList_PathArcTo ImDrawList_PathArcTo;
	da_ImDrawList_AddImageQuad ImDrawList_AddImageQuad;
	da_igIsWindowCollapsed igIsWindowCollapsed;
	da_ImDrawList_AddImage ImDrawList_AddImage;
	da_ImDrawList_AddText ImDrawList_AddText;
	da_igSetNextWindowFocus igSetNextWindowFocus;
	da_igSameLine igSameLine;
	da_igBegin igBegin;
	da_igColorEdit3 igColorEdit3;
	da_ImDrawList_AddCircleFilled ImDrawList_AddCircleFilled;
	da_ImGuiIO_AddInputCharactersUTF8 ImGuiIO_AddInputCharactersUTF8;
	da_ImDrawList_AddCircle ImDrawList_AddCircle;
	da_ImDrawList_AddTriangleFilled ImDrawList_AddTriangleFilled;
	da_igDragFloat2 igDragFloat2;
	da_igPushButtonRepeat igPushButtonRepeat;
	da_igPopItemWidth igPopItemWidth;
	da_ImDrawList_AddTriangle ImDrawList_AddTriangle;
	da_ImDrawList_AddQuadFilled ImDrawList_AddQuadFilled;
	da_ImDrawList_AddQuad ImDrawList_AddQuad;
	da_ImDrawList_AddRectFilledMultiColor ImDrawList_AddRectFilledMultiColor;
	da_igGetFontSize igGetFontSize;
	da_igInputDouble igInputDouble;
	da_ImDrawList_PrimReserve ImDrawList_PrimReserve;
	da_ImDrawList_AddLine ImDrawList_AddLine;
	da_igEndPopup igEndPopup;
	da_ImFontAtlas_ClearInputData ImFontAtlas_ClearInputData;
	da_ImDrawList_GetClipRectMin ImDrawList_GetClipRectMin;
	da_igInputTextMultiline igInputTextMultiline;
	da_igSelectable igSelectable;
	da_igListBox igListBox;
	da_ImDrawList_PopTextureID ImDrawList_PopTextureID;
	da_igSetWindowFocus igSetWindowFocus;
	da_igInputFloat4 igInputFloat4;
	da_igGetVersion igGetVersion;
	da_igEndCombo igEndCombo;
	da_igPushID igPushID;
	da_ImGuiListClipper_End ImGuiListClipper_End;
	da_ImGuiListClipper_Begin ImGuiListClipper_Begin;
	da_igGetDragDropPayload igGetDragDropPayload;
	da_igAlignTextToFramePadding igAlignTextToFramePadding;
	da_igPopStyleColor igPopStyleColor;
	da_ImGuiListClipper_Step ImGuiListClipper_Step;
	da_igText igText;
	da_igBeginMenu igBeginMenu;
	da_ImGuiStorage_GetFloatRef ImGuiStorage_GetFloatRef;
	da_igEndTooltip igEndTooltip;
	da_igTextV igTextV;
	da_igDragInt igDragInt;
	da_igColorConvertFloat4ToU32 igColorConvertFloat4ToU32;
	da_ImGuiIO_ClearInputCharacters ImGuiIO_ClearInputCharacters;
	da_ImGuiPayload_IsDataType ImGuiPayload_IsDataType;
	da_igPushClipRect igPushClipRect;
	da_igSetColumnWidth igSetColumnWidth;
	da_igBeginMainMenuBar igBeginMainMenuBar;
	da_ImGuiInputTextCallbackData_InsertChars ImGuiInputTextCallbackData_InsertChars;
	da_ImGuiStorage_GetFloat ImGuiStorage_GetFloat;
	da_ImFontAtlas_GetMouseCursorTexData ImFontAtlas_GetMouseCursorTexData;
	da_igVSliderScalar igVSliderScalar;
	da_ImGuiStorage_GetVoidPtrRef ImGuiStorage_GetVoidPtrRef;
	da_igStyleColorsLight igStyleColorsLight;
	da_igSliderFloat3 igSliderFloat3;
	da_igSetAllocatorFunctions igSetAllocatorFunctions;
	da_igDragFloat igDragFloat;
	da_ImGuiStorage_GetIntRef ImGuiStorage_GetIntRef;
	da_igGetWindowHeight igGetWindowHeight;
	da_igGetMousePosOnOpeningCurrentPopup igGetMousePosOnOpeningCurrentPopup;
	da_ImGuiStorage_SetVoidPtr ImGuiStorage_SetVoidPtr;
	da_igCalcListClipping igCalcListClipping;
	da_ImGuiStorage_SetFloat ImGuiStorage_SetFloat;
	da_igEndDragDropSource igEndDragDropSource;
	da_ImGuiStorage_BuildSortByKey ImGuiStorage_BuildSortByKey;
	da_ImGuiStorage_SetBool ImGuiStorage_SetBool;
	da_ImGuiStorage_GetBool ImGuiStorage_GetBool;
	da_ImGuiStorage_SetInt ImGuiStorage_SetInt;
	da_igLabelTextV igLabelTextV;
	da_igGetFrameHeightWithSpacing igGetFrameHeightWithSpacing;
	da_igTreeNodeEx igTreeNodeEx;
	da_igCloseCurrentPopup igCloseCurrentPopup;
	da_ImGuiTextBuffer_clear ImGuiTextBuffer_clear;
	da_ImGuiStorage_Clear ImGuiStorage_Clear;
	da_ImGuiTextBuffer_appendf ImGuiTextBuffer_appendf;
	da_ImGuiTextBuffer_c_str ImGuiTextBuffer_c_str;
	da_ImGuiTextBuffer_reserve ImGuiTextBuffer_reserve;
	da_ImGuiTextBuffer_empty ImGuiTextBuffer_empty;
	da_igSliderScalar igSliderScalar;
	da_igTreePush igTreePush;
	da_igListBoxFooter igListBoxFooter;
	da_igTextDisabled igTextDisabled;
	da_igIsItemHovered igIsItemHovered;
	da_ImDrawList_PrimWriteVtx ImDrawList_PrimWriteVtx;
	da_igBullet igBullet;
	da_igInputInt3 igInputInt3;
	da_TextRange_end TextRange_end;
	da_igStyleColorsDark igStyleColorsDark;
	da_igInputInt igInputInt;
	da_igSetWindowFontScale igSetWindowFontScale;
	da_igSliderInt igSliderInt;
	da_TextRange_begin TextRange_begin;
	da_igSetNextWindowPos igSetNextWindowPos;
	da_igDragInt3 igDragInt3;
	da_igOpenPopup igOpenPopup;
	da_igSetColumnOffset igSetColumnOffset;
	da_ImDrawList_GetClipRectMax ImDrawList_GetClipRectMax;
	da_igBeginCombo igBeginCombo;
	da_igGetDrawListSharedData igGetDrawListSharedData;
	da_ImGuiTextFilter_Draw ImGuiTextFilter_Draw;
	da_igIsItemActive igIsItemActive;
	da_igBeginDragDropTarget igBeginDragDropTarget;
	da_TextRange_empty TextRange_empty;
	da_ImGuiPayload_IsDelivery ImGuiPayload_IsDelivery;
	da_ImGuiIO_AddInputCharacter ImGuiIO_AddInputCharacter;
	da_ImDrawList_AddImageRounded ImDrawList_AddImageRounded;
	da_igPushStyleColor igPushStyleColor;
	da_igGetContentRegionMax igGetContentRegionMax;
	da_igBeginChildFrame igBeginChildFrame;
	da_igSaveIniSettingsToDisk igSaveIniSettingsToDisk;
	da_ImFont_ClearOutputData ImFont_ClearOutputData;
	da_ImDrawList_PrimQuadUV ImDrawList_PrimQuadUV;
	da_igEndDragDropTarget igEndDragDropTarget;
	da_ImFontAtlas_GetGlyphRangesKorean ImFontAtlas_GetGlyphRangesKorean;
	da_igGetKeyPressedAmount igGetKeyPressedAmount;
	da_ImFontAtlas_GetTexDataAsRGBA32 ImFontAtlas_GetTexDataAsRGBA32;
	da_igNewFrame igNewFrame;
	da_igResetMouseDragDelta igResetMouseDragDelta;
	da_igGetTreeNodeToLabelSpacing igGetTreeNodeToLabelSpacing;
	da_igGetMousePos igGetMousePos;
	da_GlyphRangesBuilder_AddChar GlyphRangesBuilder_AddChar;
	da_igPopID igPopID;
	da_igIsMouseDoubleClicked igIsMouseDoubleClicked;
	da_igSetNextWindowSize igSetNextWindowSize;
	da_ImGuiTextFilter_IsActive ImGuiTextFilter_IsActive;
	da_ImDrawList_PathClear ImDrawList_PathClear;
	da_igBeginGroup igBeginGroup;
	da_igColorConvertHSVtoRGB igColorConvertHSVtoRGB;
	da_igVSliderFloat igVSliderFloat;
	da_igColorConvertU32ToFloat4 igColorConvertU32ToFloat4;
	da_igPopTextWrapPos igPopTextWrapPos;
	da_ImGuiTextFilter_Clear ImGuiTextFilter_Clear;
	da_igGetColumnWidth igGetColumnWidth;
	da_igEndMenuBar igEndMenuBar;
	da_igGetStyleColorName igGetStyleColorName;
	da_igIsMouseDragging igIsMouseDragging;
	da_ImDrawList_PrimWriteIdx ImDrawList_PrimWriteIdx;
	da_ImGuiStyle_ScaleAllSizes ImGuiStyle_ScaleAllSizes;
	da_igGetItemRectSize igGetItemRectSize;
	da_igMemAlloc igMemAlloc;
	da_igColorPicker3 igColorPicker3;
	da_igSetCurrentContext igSetCurrentContext;
	da_igPushItemWidth igPushItemWidth;
	da_igGetStyle igGetStyle;
	da_igSetItemAllowOverlap igSetItemAllowOverlap;
	da_igEndChild igEndChild;
	da_igCollapsingHeader igCollapsingHeader;
	da_igTextDisabledV igTextDisabledV;
	da_igDragFloatRange2 igDragFloatRange2;
	da_igSetMouseCursor igSetMouseCursor;
	da_igShowFontSelector igShowFontSelector;
	da_igInputScalar igInputScalar;
	da_ImDrawList_PushClipRectFullScreen ImDrawList_PushClipRectFullScreen;
	da_igShowStyleSelector igShowStyleSelector;
	da_igGetTime igGetTime;
	da_ImDrawList_ChannelsMerge ImDrawList_ChannelsMerge;
	da_igGetColumnIndex igGetColumnIndex;
	da_igBeginPopupContextItem igBeginPopupContextItem;
	da_igGetCursorPosX igGetCursorPosX;
	da_igEndMainMenuBar igEndMainMenuBar;
	da_igSetCursorPosX igSetCursorPosX;
	da_igGetMouseCursor igGetMouseCursor;
	da_igMenuItem igMenuItem;
	da_igGetScrollY igGetScrollY;
	da_igPushAllowKeyboardFocus igPushAllowKeyboardFocus;
	da_ImGuiTextBuffer_begin ImGuiTextBuffer_begin;
	da_igSetCursorPosY igSetCursorPosY;
	da_igSetWindowPos igSetWindowPos;
	da_igGetCursorPosY igGetCursorPosY;
	da_ImFontAtlas_AddCustomRectFontGlyph ImFontAtlas_AddCustomRectFontGlyph;
	da_igBulletTextV igBulletTextV;
	da_igGetContentRegionAvailWidth igGetContentRegionAvailWidth;
	da_igEnd igEnd;
	da_igIsKeyDown igIsKeyDown;
	da_igIsMouseDown igIsMouseDown;
	da_igGetCursorPos igGetCursorPos;
	da_igLogButtons igLogButtons;
	da_igDestroyContext igDestroyContext;
	da_igSliderAngle igSliderAngle;
	da_igSetNextWindowContentSize igSetNextWindowContentSize;
	da_igGetWindowWidth igGetWindowWidth;
	da_igGetWindowContentRegionMin igGetWindowContentRegionMin;
	da_ImGuiStorage_GetInt ImGuiStorage_GetInt;
	da_igSliderInt3 igSliderInt3;
	da_igPushTextWrapPos igPushTextWrapPos;
	da_igSliderScalarN igSliderScalarN;
	da_ImColor_HSV ImColor_HSV;
	da_ImDrawList_PathLineTo ImDrawList_PathLineTo;
	da_igStyleColorsClassic igStyleColorsClassic;
	da_igSliderFloat igSliderFloat;
	da_igImage igImage;
	da_igBulletText igBulletText;
	da_igInputFloat2 igInputFloat2;
	da_igGetTextLineHeightWithSpacing igGetTextLineHeightWithSpacing;
	da_ImDrawList_PrimRectUV ImDrawList_PrimRectUV;
	da_igColorEdit4 igColorEdit4;
	da_igLogToClipboard igLogToClipboard;
	da_igBeginPopupContextWindow igBeginPopupContextWindow;
	da_igDragScalar igDragScalar;
	da_igSetItemDefaultFocus igSetItemDefaultFocus;
	da_igCaptureMouseFromApp igCaptureMouseFromApp;
	da_igIsAnyItemHovered igIsAnyItemHovered;
	da_igPushFont igPushFont;
	da_igTreePop igTreePop;
	da_igGetWindowContentRegionWidth igGetWindowContentRegionWidth;
	da_igInputText igInputText;
	da_ImGuiTextBuffer_end ImGuiTextBuffer_end;
	da_igPopStyleVar igPopStyleVar;
	da_ImGuiTextFilter_PassFilter ImGuiTextFilter_PassFilter;
	da_igGetFont igGetFont;
	da_igTreeNode igTreeNode;
	da_igTreeNodeV igTreeNodeV;
	da_igGetScrollMaxX igGetScrollMaxX;
	da_igSetTooltip igSetTooltip;
	da_igGetContentRegionAvail igGetContentRegionAvail;
	da_igInputFloat3 igInputFloat3;
	da_igSetKeyboardFocusHere igSetKeyboardFocusHere;
}


private
{
    import derelict.util.loader;

    version(darwin)
        version = MacOSX;
    version(OSX)
        version = MacOSX;
}

private
{
    import derelict.util.loader;
    import derelict.util.system;

    static if(Derelict_OS_Windows)
        enum libNames = "cimgui.dll";
    else static if (Derelict_OS_Mac)
        enum libNames = "cimgui.dylib";
    else static if (Derelict_OS_Linux)
        enum libNames = "cimgui.so";
    else
        static assert(0, "Need to implement imgui libNames for this operating system.");
}

final class DerelictImguiLoader : SharedLibLoader
{
    protected
    {
        override void loadSymbols()
        {
			bindFunc(cast(void**)&igGetFrameHeight, "igGetFrameHeight");
			bindFunc(cast(void**)&igCreateContext, "igCreateContext");
			bindFunc(cast(void**)&igTextUnformatted, "igTextUnformatted");
			bindFunc(cast(void**)&igPopFont, "igPopFont");
			bindFunc(cast(void**)&igCombo, "igCombo");
			bindFunc(cast(void**)&igCaptureKeyboardFromApp, "igCaptureKeyboardFromApp");
			bindFunc(cast(void**)&igIsWindowFocused, "igIsWindowFocused");
			bindFunc(cast(void**)&igRender, "igRender");
			bindFunc(cast(void**)&ImDrawList_ChannelsSetCurrent, "ImDrawList_ChannelsSetCurrent");
			bindFunc(cast(void**)&igDragFloat4, "igDragFloat4");
			bindFunc(cast(void**)&ImDrawList_ChannelsSplit, "ImDrawList_ChannelsSplit");
			bindFunc(cast(void**)&igIsMousePosValid, "igIsMousePosValid");
			bindFunc(cast(void**)&igGetCursorScreenPos, "igGetCursorScreenPos");
			bindFunc(cast(void**)&igDebugCheckVersionAndDataLayout, "igDebugCheckVersionAndDataLayout");
			bindFunc(cast(void**)&igSliderFloat4, "igSliderFloat4");
			bindFunc(cast(void**)&igSetScrollY, "igSetScrollY");
			bindFunc(cast(void**)&igGetStateStorage, "igGetStateStorage");
			bindFunc(cast(void**)&igSetColorEditOptions, "igSetColorEditOptions");
			bindFunc(cast(void**)&ImGuiStorage_GetBoolRef, "ImGuiStorage_GetBoolRef");
			bindFunc(cast(void**)&igInputScalarN, "igInputScalarN");
			bindFunc(cast(void**)&igColorPicker4, "igColorPicker4");
			bindFunc(cast(void**)&igSetScrollFromPosY, "igSetScrollFromPosY");
			bindFunc(cast(void**)&ImDrawList_Clear, "ImDrawList_Clear");
			bindFunc(cast(void**)&igGetStyleColorVec4, "igGetStyleColorVec4");
			bindFunc(cast(void**)&igGetClipboardText, "igGetClipboardText");
			bindFunc(cast(void**)&igIsMouseHoveringRect, "igIsMouseHoveringRect");
			bindFunc(cast(void**)&ImColor_SetHSV, "ImColor_SetHSV");
			bindFunc(cast(void**)&igDragFloat3, "igDragFloat3");
			bindFunc(cast(void**)&ImDrawList_AddPolyline, "ImDrawList_AddPolyline");
			bindFunc(cast(void**)&igCalcTextSize, "igCalcTextSize");
			bindFunc(cast(void**)&igSetStateStorage, "igSetStateStorage");
			bindFunc(cast(void**)&igValue, "igValue");
			bindFunc(cast(void**)&igColumns, "igColumns");
			bindFunc(cast(void**)&ImGuiTextFilter_Build, "ImGuiTextFilter_Build");
			bindFunc(cast(void**)&igGetItemRectMax, "igGetItemRectMax");
			bindFunc(cast(void**)&igIsItemDeactivated, "igIsItemDeactivated");
			bindFunc(cast(void**)&igPushStyleVar, "igPushStyleVar");
			bindFunc(cast(void**)&igSaveIniSettingsToMemory, "igSaveIniSettingsToMemory");
			bindFunc(cast(void**)&ImGuiTextBuffer_size, "ImGuiTextBuffer_size");
			bindFunc(cast(void**)&igDragIntRange2, "igDragIntRange2");
			bindFunc(cast(void**)&igUnindent, "igUnindent");
			bindFunc(cast(void**)&ImFontAtlas_AddFontFromMemoryCompressedBase85TTF, "ImFontAtlas_AddFontFromMemoryCompressedBase85TTF");
			bindFunc(cast(void**)&igPopAllowKeyboardFocus, "igPopAllowKeyboardFocus");
			bindFunc(cast(void**)&igLoadIniSettingsFromDisk, "igLoadIniSettingsFromDisk");
			bindFunc(cast(void**)&igGetCursorStartPos, "igGetCursorStartPos");
			bindFunc(cast(void**)&igSetCursorScreenPos, "igSetCursorScreenPos");
			bindFunc(cast(void**)&ImFont_AddRemapChar, "ImFont_AddRemapChar");
			bindFunc(cast(void**)&ImFont_AddGlyph, "ImFont_AddGlyph");
			bindFunc(cast(void**)&igInputInt4, "igInputInt4");
			bindFunc(cast(void**)&ImFont_GrowIndex, "ImFont_GrowIndex");
			bindFunc(cast(void**)&ImFont_RenderText, "ImFont_RenderText");
			bindFunc(cast(void**)&igIsRectVisible, "igIsRectVisible");
			bindFunc(cast(void**)&ImFontAtlas_Build, "ImFontAtlas_Build");
			bindFunc(cast(void**)&igLabelText, "igLabelText");
			bindFunc(cast(void**)&ImFont_CalcWordWrapPositionA, "ImFont_CalcWordWrapPositionA");
			bindFunc(cast(void**)&igLogFinish, "igLogFinish");
			bindFunc(cast(void**)&igIsKeyPressed, "igIsKeyPressed");
			bindFunc(cast(void**)&igGetColumnOffset, "igGetColumnOffset");
			bindFunc(cast(void**)&ImDrawList_PopClipRect, "ImDrawList_PopClipRect");
			bindFunc(cast(void**)&ImFont_CalcTextSizeA, "ImFont_CalcTextSizeA");
			bindFunc(cast(void**)&igSetNextWindowCollapsed, "igSetNextWindowCollapsed");
			bindFunc(cast(void**)&igGetCurrentContext, "igGetCurrentContext");
			bindFunc(cast(void**)&igSmallButton, "igSmallButton");
			bindFunc(cast(void**)&igOpenPopupOnItemClick, "igOpenPopupOnItemClick");
			bindFunc(cast(void**)&igIsAnyMouseDown, "igIsAnyMouseDown");
			bindFunc(cast(void**)&ImFont_IsLoaded, "ImFont_IsLoaded");
			bindFunc(cast(void**)&ImFont_GetCharAdvance, "ImFont_GetCharAdvance");
			bindFunc(cast(void**)&ImFont_SetFallbackChar, "ImFont_SetFallbackChar");
			bindFunc(cast(void**)&ImFont_FindGlyphNoFallback, "ImFont_FindGlyphNoFallback");
			bindFunc(cast(void**)&igImageButton, "igImageButton");
			bindFunc(cast(void**)&ImFont_FindGlyph, "ImFont_FindGlyph");
			bindFunc(cast(void**)&igEndFrame, "igEndFrame");
			bindFunc(cast(void**)&igSliderFloat2, "igSliderFloat2");
			bindFunc(cast(void**)&ImFont_RenderChar, "ImFont_RenderChar");
			bindFunc(cast(void**)&igRadioButton, "igRadioButton");
			bindFunc(cast(void**)&ImDrawList_PushClipRect, "ImDrawList_PushClipRect");
			bindFunc(cast(void**)&igLoadIniSettingsFromMemory, "igLoadIniSettingsFromMemory");
			bindFunc(cast(void**)&igIsItemDeactivatedAfterEdit, "igIsItemDeactivatedAfterEdit");
			bindFunc(cast(void**)&igGetWindowDrawList, "igGetWindowDrawList");
			bindFunc(cast(void**)&ImDrawList_PathBezierCurveTo, "ImDrawList_PathBezierCurveTo");
			bindFunc(cast(void**)&ImGuiPayload_Clear, "ImGuiPayload_Clear");
			bindFunc(cast(void**)&igNewLine, "igNewLine");
			bindFunc(cast(void**)&igIsItemFocused, "igIsItemFocused");
			bindFunc(cast(void**)&igSliderInt2, "igSliderInt2");
			bindFunc(cast(void**)&ImGuiStorage_SetAllInt, "ImGuiStorage_SetAllInt");
			bindFunc(cast(void**)&igSetWindowSize, "igSetWindowSize");
			bindFunc(cast(void**)&igInputFloat, "igInputFloat");
			bindFunc(cast(void**)&ImFontAtlas_CalcCustomRectUV, "ImFontAtlas_CalcCustomRectUV");
			bindFunc(cast(void**)&ImFontAtlas_GetCustomRectByIndex, "ImFontAtlas_GetCustomRectByIndex");
			bindFunc(cast(void**)&igColorConvertRGBtoHSV, "igColorConvertRGBtoHSV");
			bindFunc(cast(void**)&igBeginMenuBar, "igBeginMenuBar");
			bindFunc(cast(void**)&igTextColoredV, "igTextColoredV");
			bindFunc(cast(void**)&igIsPopupOpen, "igIsPopupOpen");
			bindFunc(cast(void**)&igIsItemVisible, "igIsItemVisible");
			bindFunc(cast(void**)&igGetWindowContentRegionMax, "igGetWindowContentRegionMax");
			bindFunc(cast(void**)&igTextWrappedV, "igTextWrappedV");
			bindFunc(cast(void**)&ImFontAtlas_AddCustomRectRegular, "ImFontAtlas_AddCustomRectRegular");
			bindFunc(cast(void**)&GlyphRangesBuilder_AddText, "GlyphRangesBuilder_AddText");
			bindFunc(cast(void**)&ImDrawList_UpdateTextureID, "ImDrawList_UpdateTextureID");
			bindFunc(cast(void**)&CustomRect_IsPacked, "CustomRect_IsPacked");
			bindFunc(cast(void**)&ImGuiInputTextCallbackData_HasSelection, "ImGuiInputTextCallbackData_HasSelection");
			bindFunc(cast(void**)&igSetWindowCollapsed, "igSetWindowCollapsed");
			bindFunc(cast(void**)&igGetMouseDragDelta, "igGetMouseDragDelta");
			bindFunc(cast(void**)&igAcceptDragDropPayload, "igAcceptDragDropPayload");
			bindFunc(cast(void**)&igBeginDragDropSource, "igBeginDragDropSource");
			bindFunc(cast(void**)&ImDrawList_AddCallback, "ImDrawList_AddCallback");
			bindFunc(cast(void**)&igPlotLines, "igPlotLines");
			bindFunc(cast(void**)&ImFontAtlas_IsBuilt, "ImFontAtlas_IsBuilt");
			bindFunc(cast(void**)&igTextWrapped, "igTextWrapped");
			bindFunc(cast(void**)&GlyphRangesBuilder_AddRanges, "GlyphRangesBuilder_AddRanges");
			bindFunc(cast(void**)&igGetFrameCount, "igGetFrameCount");
			bindFunc(cast(void**)&GlyphRangesBuilder_SetBit, "GlyphRangesBuilder_SetBit");
			bindFunc(cast(void**)&ImDrawList_PathFillConvex, "ImDrawList_PathFillConvex");
			bindFunc(cast(void**)&ImFont_GetDebugName, "ImFont_GetDebugName");
			bindFunc(cast(void**)&igListBoxHeader, "igListBoxHeader");
			bindFunc(cast(void**)&igPopClipRect, "igPopClipRect");
			bindFunc(cast(void**)&ImFontAtlas_GetGlyphRangesThai, "ImFontAtlas_GetGlyphRangesThai");
			bindFunc(cast(void**)&ImFontAtlas_GetGlyphRangesCyrillic, "ImFontAtlas_GetGlyphRangesCyrillic");
			bindFunc(cast(void**)&igGetWindowSize, "igGetWindowSize");
			bindFunc(cast(void**)&ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon, "ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon");
			bindFunc(cast(void**)&igCheckboxFlags, "igCheckboxFlags");
			bindFunc(cast(void**)&ImFontAtlas_GetGlyphRangesChineseFull, "ImFontAtlas_GetGlyphRangesChineseFull");
			bindFunc(cast(void**)&igIsWindowHovered, "igIsWindowHovered");
			bindFunc(cast(void**)&igPlotHistogram, "igPlotHistogram");
			bindFunc(cast(void**)&igBeginPopupContextVoid, "igBeginPopupContextVoid");
			bindFunc(cast(void**)&igShowStyleEditor, "igShowStyleEditor");
			bindFunc(cast(void**)&igShowUserGuide, "igShowUserGuide");
			bindFunc(cast(void**)&igCheckbox, "igCheckbox");
			bindFunc(cast(void**)&igGetWindowPos, "igGetWindowPos");
			bindFunc(cast(void**)&ImFontAtlas_GetGlyphRangesDefault, "ImFontAtlas_GetGlyphRangesDefault");
			bindFunc(cast(void**)&ImFontAtlas_SetTexID, "ImFontAtlas_SetTexID");
			bindFunc(cast(void**)&igTextColored, "igTextColored");
			bindFunc(cast(void**)&igLogToFile, "igLogToFile");
			bindFunc(cast(void**)&igButton, "igButton");
			bindFunc(cast(void**)&igIsItemEdited, "igIsItemEdited");
			bindFunc(cast(void**)&igTreeNodeExV, "igTreeNodeExV");
			bindFunc(cast(void**)&ImDrawList_PushTextureID, "ImDrawList_PushTextureID");
			bindFunc(cast(void**)&igTreeAdvanceToLabelPos, "igTreeAdvanceToLabelPos");
			bindFunc(cast(void**)&ImGuiInputTextCallbackData_DeleteChars, "ImGuiInputTextCallbackData_DeleteChars");
			bindFunc(cast(void**)&igDragInt2, "igDragInt2");
			bindFunc(cast(void**)&igArrowButton, "igArrowButton");
			bindFunc(cast(void**)&igIsAnyItemActive, "igIsAnyItemActive");
			bindFunc(cast(void**)&ImDrawList_AddBezierCurve, "ImDrawList_AddBezierCurve");
			bindFunc(cast(void**)&ImFontAtlas_AddFontFromMemoryCompressedTTF, "ImFontAtlas_AddFontFromMemoryCompressedTTF");
			bindFunc(cast(void**)&ImFontAtlas_ClearFonts, "ImFontAtlas_ClearFonts");
			bindFunc(cast(void**)&igDummy, "igDummy");
			bindFunc(cast(void**)&ImFontAtlas_ClearTexData, "ImFontAtlas_ClearTexData");
			bindFunc(cast(void**)&igGetColumnsCount, "igGetColumnsCount");
			bindFunc(cast(void**)&igPopButtonRepeat, "igPopButtonRepeat");
			bindFunc(cast(void**)&igDragScalarN, "igDragScalarN");
			bindFunc(cast(void**)&ImGuiPayload_IsPreview, "ImGuiPayload_IsPreview");
			bindFunc(cast(void**)&igSpacing, "igSpacing");
			bindFunc(cast(void**)&ImFontAtlas_Clear, "ImFontAtlas_Clear");
			bindFunc(cast(void**)&igIsAnyItemFocused, "igIsAnyItemFocused");
			bindFunc(cast(void**)&ImFontAtlas_AddFontFromMemoryTTF, "ImFontAtlas_AddFontFromMemoryTTF");
			bindFunc(cast(void**)&ImFontAtlas_AddFontFromFileTTF, "ImFontAtlas_AddFontFromFileTTF");
			bindFunc(cast(void**)&igMemFree, "igMemFree");
			bindFunc(cast(void**)&igGetFontTexUvWhitePixel, "igGetFontTexUvWhitePixel");
			bindFunc(cast(void**)&ImDrawList_AddDrawCmd, "ImDrawList_AddDrawCmd");
			bindFunc(cast(void**)&igIsItemClicked, "igIsItemClicked");
			bindFunc(cast(void**)&ImFontAtlas_AddFontDefault, "ImFontAtlas_AddFontDefault");
			bindFunc(cast(void**)&ImFontAtlas_AddFont, "ImFontAtlas_AddFont");
			bindFunc(cast(void**)&igProgressBar, "igProgressBar");
			bindFunc(cast(void**)&igSetNextWindowBgAlpha, "igSetNextWindowBgAlpha");
			bindFunc(cast(void**)&igBeginPopup, "igBeginPopup");
			bindFunc(cast(void**)&ImFont_BuildLookupTable, "ImFont_BuildLookupTable");
			bindFunc(cast(void**)&igGetScrollX, "igGetScrollX");
			bindFunc(cast(void**)&igGetKeyIndex, "igGetKeyIndex");
			bindFunc(cast(void**)&igGetOverlayDrawList, "igGetOverlayDrawList");
			bindFunc(cast(void**)&igGetID, "igGetID");
			bindFunc(cast(void**)&ImFontAtlas_GetGlyphRangesJapanese, "ImFontAtlas_GetGlyphRangesJapanese");
			bindFunc(cast(void**)&ImDrawData_ScaleClipRects, "ImDrawData_ScaleClipRects");
			bindFunc(cast(void**)&ImDrawData_DeIndexAllBuffers, "ImDrawData_DeIndexAllBuffers");
			bindFunc(cast(void**)&igIsMouseReleased, "igIsMouseReleased");
			bindFunc(cast(void**)&ImDrawData_Clear, "ImDrawData_Clear");
			bindFunc(cast(void**)&igGetItemRectMin, "igGetItemRectMin");
			bindFunc(cast(void**)&igLogText, "igLogText");
			bindFunc(cast(void**)&igSetNextWindowSizeConstraints, "igSetNextWindowSizeConstraints");
			bindFunc(cast(void**)&ImGuiStorage_GetVoidPtr, "ImGuiStorage_GetVoidPtr");
			bindFunc(cast(void**)&ImDrawList_UpdateClipRect, "ImDrawList_UpdateClipRect");
			bindFunc(cast(void**)&ImDrawList_PrimVtx, "ImDrawList_PrimVtx");
			bindFunc(cast(void**)&igGetColorU32, "igGetColorU32");
			bindFunc(cast(void**)&igVSliderInt, "igVSliderInt");
			bindFunc(cast(void**)&igInvisibleButton, "igInvisibleButton");
			bindFunc(cast(void**)&igInputInt2, "igInputInt2");
			bindFunc(cast(void**)&ImDrawList_PrimRect, "ImDrawList_PrimRect");
			bindFunc(cast(void**)&ImDrawList_AddRectFilled, "ImDrawList_AddRectFilled");
			bindFunc(cast(void**)&ImDrawList_ClearFreeMemory, "ImDrawList_ClearFreeMemory");
			bindFunc(cast(void**)&ImDrawList_CloneOutput, "ImDrawList_CloneOutput");
			bindFunc(cast(void**)&igSetNextTreeNodeOpen, "igSetNextTreeNodeOpen");
			bindFunc(cast(void**)&igLogToTTY, "igLogToTTY");
			bindFunc(cast(void**)&igSetTooltipV, "igSetTooltipV");
			bindFunc(cast(void**)&igEndGroup, "igEndGroup");
			bindFunc(cast(void**)&igGetIO, "igGetIO");
			bindFunc(cast(void**)&igDragInt4, "igDragInt4");
			bindFunc(cast(void**)&igNextColumn, "igNextColumn");
			bindFunc(cast(void**)&ImDrawList_AddRect, "ImDrawList_AddRect");
			bindFunc(cast(void**)&igSetCursorPos, "igSetCursorPos");
			bindFunc(cast(void**)&igBeginPopupModal, "igBeginPopupModal");
			bindFunc(cast(void**)&igSliderInt4, "igSliderInt4");
			bindFunc(cast(void**)&ImDrawList_PathRect, "ImDrawList_PathRect");
			bindFunc(cast(void**)&igShowMetricsWindow, "igShowMetricsWindow");
			bindFunc(cast(void**)&igGetScrollMaxY, "igGetScrollMaxY");
			bindFunc(cast(void**)&igBeginTooltip, "igBeginTooltip");
			bindFunc(cast(void**)&ImDrawList_PathArcToFast, "ImDrawList_PathArcToFast");
			bindFunc(cast(void**)&igGetDrawData, "igGetDrawData");
			bindFunc(cast(void**)&igGetTextLineHeight, "igGetTextLineHeight");
			bindFunc(cast(void**)&igSeparator, "igSeparator");
			bindFunc(cast(void**)&igBeginChild, "igBeginChild");
			bindFunc(cast(void**)&igIsWindowAppearing, "igIsWindowAppearing");
			bindFunc(cast(void**)&igIsMouseClicked, "igIsMouseClicked");
			bindFunc(cast(void**)&igCalcItemWidth, "igCalcItemWidth");
			bindFunc(cast(void**)&ImGuiTextBuffer_appendfv, "ImGuiTextBuffer_appendfv");
			bindFunc(cast(void**)&ImDrawList_PathStroke, "ImDrawList_PathStroke");
			bindFunc(cast(void**)&igEndChildFrame, "igEndChildFrame");
			bindFunc(cast(void**)&igIndent, "igIndent");
			bindFunc(cast(void**)&igSetDragDropPayload, "igSetDragDropPayload");
			bindFunc(cast(void**)&GlyphRangesBuilder_GetBit, "GlyphRangesBuilder_GetBit");
			bindFunc(cast(void**)&igSetScrollHereY, "igSetScrollHereY");
			bindFunc(cast(void**)&igShowDemoWindow, "igShowDemoWindow");
			bindFunc(cast(void**)&ImDrawList_PathLineToMergeDuplicate, "ImDrawList_PathLineToMergeDuplicate");
			bindFunc(cast(void**)&igSetScrollX, "igSetScrollX");
			bindFunc(cast(void**)&igIsKeyReleased, "igIsKeyReleased");
			bindFunc(cast(void**)&igEndMenu, "igEndMenu");
			bindFunc(cast(void**)&igColorButton, "igColorButton");
			bindFunc(cast(void**)&ImFontAtlas_GetTexDataAsAlpha8, "ImFontAtlas_GetTexDataAsAlpha8");
			bindFunc(cast(void**)&ImDrawList_AddConvexPolyFilled, "ImDrawList_AddConvexPolyFilled");
			bindFunc(cast(void**)&igSetClipboardText, "igSetClipboardText");
			bindFunc(cast(void**)&ImDrawList_PathArcTo, "ImDrawList_PathArcTo");
			bindFunc(cast(void**)&ImDrawList_AddImageQuad, "ImDrawList_AddImageQuad");
			bindFunc(cast(void**)&igIsWindowCollapsed, "igIsWindowCollapsed");
			bindFunc(cast(void**)&ImDrawList_AddImage, "ImDrawList_AddImage");
			bindFunc(cast(void**)&ImDrawList_AddText, "ImDrawList_AddText");
			bindFunc(cast(void**)&igSetNextWindowFocus, "igSetNextWindowFocus");
			bindFunc(cast(void**)&igSameLine, "igSameLine");
			bindFunc(cast(void**)&igBegin, "igBegin");
			bindFunc(cast(void**)&igColorEdit3, "igColorEdit3");
			bindFunc(cast(void**)&ImDrawList_AddCircleFilled, "ImDrawList_AddCircleFilled");
			bindFunc(cast(void**)&ImGuiIO_AddInputCharactersUTF8, "ImGuiIO_AddInputCharactersUTF8");
			bindFunc(cast(void**)&ImDrawList_AddCircle, "ImDrawList_AddCircle");
			bindFunc(cast(void**)&ImDrawList_AddTriangleFilled, "ImDrawList_AddTriangleFilled");
			bindFunc(cast(void**)&igDragFloat2, "igDragFloat2");
			bindFunc(cast(void**)&igPushButtonRepeat, "igPushButtonRepeat");
			bindFunc(cast(void**)&igPopItemWidth, "igPopItemWidth");
			bindFunc(cast(void**)&ImDrawList_AddTriangle, "ImDrawList_AddTriangle");
			bindFunc(cast(void**)&ImDrawList_AddQuadFilled, "ImDrawList_AddQuadFilled");
			bindFunc(cast(void**)&ImDrawList_AddQuad, "ImDrawList_AddQuad");
			bindFunc(cast(void**)&ImDrawList_AddRectFilledMultiColor, "ImDrawList_AddRectFilledMultiColor");
			bindFunc(cast(void**)&igGetFontSize, "igGetFontSize");
			bindFunc(cast(void**)&igInputDouble, "igInputDouble");
			bindFunc(cast(void**)&ImDrawList_PrimReserve, "ImDrawList_PrimReserve");
			bindFunc(cast(void**)&ImDrawList_AddLine, "ImDrawList_AddLine");
			bindFunc(cast(void**)&igEndPopup, "igEndPopup");
			bindFunc(cast(void**)&ImFontAtlas_ClearInputData, "ImFontAtlas_ClearInputData");
			bindFunc(cast(void**)&ImDrawList_GetClipRectMin, "ImDrawList_GetClipRectMin");
			bindFunc(cast(void**)&igInputTextMultiline, "igInputTextMultiline");
			bindFunc(cast(void**)&igSelectable, "igSelectable");
			bindFunc(cast(void**)&igListBox, "igListBox");
			bindFunc(cast(void**)&ImDrawList_PopTextureID, "ImDrawList_PopTextureID");
			bindFunc(cast(void**)&igSetWindowFocus, "igSetWindowFocus");
			bindFunc(cast(void**)&igInputFloat4, "igInputFloat4");
			bindFunc(cast(void**)&igGetVersion, "igGetVersion");
			bindFunc(cast(void**)&igEndCombo, "igEndCombo");
			bindFunc(cast(void**)&igPushID, "igPushID");
			bindFunc(cast(void**)&ImGuiListClipper_End, "ImGuiListClipper_End");
			bindFunc(cast(void**)&ImGuiListClipper_Begin, "ImGuiListClipper_Begin");
			bindFunc(cast(void**)&igGetDragDropPayload, "igGetDragDropPayload");
			bindFunc(cast(void**)&igAlignTextToFramePadding, "igAlignTextToFramePadding");
			bindFunc(cast(void**)&igPopStyleColor, "igPopStyleColor");
			bindFunc(cast(void**)&ImGuiListClipper_Step, "ImGuiListClipper_Step");
			bindFunc(cast(void**)&igText, "igText");
			bindFunc(cast(void**)&igBeginMenu, "igBeginMenu");
			bindFunc(cast(void**)&ImGuiStorage_GetFloatRef, "ImGuiStorage_GetFloatRef");
			bindFunc(cast(void**)&igEndTooltip, "igEndTooltip");
			bindFunc(cast(void**)&igTextV, "igTextV");
			bindFunc(cast(void**)&igDragInt, "igDragInt");
			bindFunc(cast(void**)&igColorConvertFloat4ToU32, "igColorConvertFloat4ToU32");
			bindFunc(cast(void**)&ImGuiIO_ClearInputCharacters, "ImGuiIO_ClearInputCharacters");
			bindFunc(cast(void**)&ImGuiPayload_IsDataType, "ImGuiPayload_IsDataType");
			bindFunc(cast(void**)&igPushClipRect, "igPushClipRect");
			bindFunc(cast(void**)&igSetColumnWidth, "igSetColumnWidth");
			bindFunc(cast(void**)&igBeginMainMenuBar, "igBeginMainMenuBar");
			bindFunc(cast(void**)&ImGuiInputTextCallbackData_InsertChars, "ImGuiInputTextCallbackData_InsertChars");
			bindFunc(cast(void**)&ImGuiStorage_GetFloat, "ImGuiStorage_GetFloat");
			bindFunc(cast(void**)&ImFontAtlas_GetMouseCursorTexData, "ImFontAtlas_GetMouseCursorTexData");
			bindFunc(cast(void**)&igVSliderScalar, "igVSliderScalar");
			bindFunc(cast(void**)&ImGuiStorage_GetVoidPtrRef, "ImGuiStorage_GetVoidPtrRef");
			bindFunc(cast(void**)&igStyleColorsLight, "igStyleColorsLight");
			bindFunc(cast(void**)&igSliderFloat3, "igSliderFloat3");
			bindFunc(cast(void**)&igSetAllocatorFunctions, "igSetAllocatorFunctions");
			bindFunc(cast(void**)&igDragFloat, "igDragFloat");
			bindFunc(cast(void**)&ImGuiStorage_GetIntRef, "ImGuiStorage_GetIntRef");
			bindFunc(cast(void**)&igGetWindowHeight, "igGetWindowHeight");
			bindFunc(cast(void**)&igGetMousePosOnOpeningCurrentPopup, "igGetMousePosOnOpeningCurrentPopup");
			bindFunc(cast(void**)&ImGuiStorage_SetVoidPtr, "ImGuiStorage_SetVoidPtr");
			bindFunc(cast(void**)&igCalcListClipping, "igCalcListClipping");
			bindFunc(cast(void**)&ImGuiStorage_SetFloat, "ImGuiStorage_SetFloat");
			bindFunc(cast(void**)&igEndDragDropSource, "igEndDragDropSource");
			bindFunc(cast(void**)&ImGuiStorage_BuildSortByKey, "ImGuiStorage_BuildSortByKey");
			bindFunc(cast(void**)&ImGuiStorage_SetBool, "ImGuiStorage_SetBool");
			bindFunc(cast(void**)&ImGuiStorage_GetBool, "ImGuiStorage_GetBool");
			bindFunc(cast(void**)&ImGuiStorage_SetInt, "ImGuiStorage_SetInt");
			bindFunc(cast(void**)&igLabelTextV, "igLabelTextV");
			bindFunc(cast(void**)&igGetFrameHeightWithSpacing, "igGetFrameHeightWithSpacing");
			bindFunc(cast(void**)&igTreeNodeEx, "igTreeNodeEx");
			bindFunc(cast(void**)&igCloseCurrentPopup, "igCloseCurrentPopup");
			bindFunc(cast(void**)&ImGuiTextBuffer_clear, "ImGuiTextBuffer_clear");
			bindFunc(cast(void**)&ImGuiStorage_Clear, "ImGuiStorage_Clear");
			bindFunc(cast(void**)&ImGuiTextBuffer_appendf, "ImGuiTextBuffer_appendf");
			bindFunc(cast(void**)&ImGuiTextBuffer_c_str, "ImGuiTextBuffer_c_str");
			bindFunc(cast(void**)&ImGuiTextBuffer_reserve, "ImGuiTextBuffer_reserve");
			bindFunc(cast(void**)&ImGuiTextBuffer_empty, "ImGuiTextBuffer_empty");
			bindFunc(cast(void**)&igSliderScalar, "igSliderScalar");
			bindFunc(cast(void**)&igTreePush, "igTreePush");
			bindFunc(cast(void**)&igListBoxFooter, "igListBoxFooter");
			bindFunc(cast(void**)&igTextDisabled, "igTextDisabled");
			bindFunc(cast(void**)&igIsItemHovered, "igIsItemHovered");
			bindFunc(cast(void**)&ImDrawList_PrimWriteVtx, "ImDrawList_PrimWriteVtx");
			bindFunc(cast(void**)&igBullet, "igBullet");
			bindFunc(cast(void**)&igInputInt3, "igInputInt3");
			bindFunc(cast(void**)&TextRange_end, "TextRange_end");
			bindFunc(cast(void**)&igStyleColorsDark, "igStyleColorsDark");
			bindFunc(cast(void**)&igInputInt, "igInputInt");
			bindFunc(cast(void**)&igSetWindowFontScale, "igSetWindowFontScale");
			bindFunc(cast(void**)&igSliderInt, "igSliderInt");
			bindFunc(cast(void**)&TextRange_begin, "TextRange_begin");
			bindFunc(cast(void**)&igSetNextWindowPos, "igSetNextWindowPos");
			bindFunc(cast(void**)&igDragInt3, "igDragInt3");
			bindFunc(cast(void**)&igOpenPopup, "igOpenPopup");
			bindFunc(cast(void**)&igSetColumnOffset, "igSetColumnOffset");
			bindFunc(cast(void**)&ImDrawList_GetClipRectMax, "ImDrawList_GetClipRectMax");
			bindFunc(cast(void**)&igBeginCombo, "igBeginCombo");
			bindFunc(cast(void**)&igGetDrawListSharedData, "igGetDrawListSharedData");
			bindFunc(cast(void**)&ImGuiTextFilter_Draw, "ImGuiTextFilter_Draw");
			bindFunc(cast(void**)&igIsItemActive, "igIsItemActive");
			bindFunc(cast(void**)&igBeginDragDropTarget, "igBeginDragDropTarget");
			bindFunc(cast(void**)&TextRange_empty, "TextRange_empty");
			bindFunc(cast(void**)&ImGuiPayload_IsDelivery, "ImGuiPayload_IsDelivery");
			bindFunc(cast(void**)&ImGuiIO_AddInputCharacter, "ImGuiIO_AddInputCharacter");
			bindFunc(cast(void**)&ImDrawList_AddImageRounded, "ImDrawList_AddImageRounded");
			bindFunc(cast(void**)&igPushStyleColor, "igPushStyleColor");
			bindFunc(cast(void**)&igGetContentRegionMax, "igGetContentRegionMax");
			bindFunc(cast(void**)&igBeginChildFrame, "igBeginChildFrame");
			bindFunc(cast(void**)&igSaveIniSettingsToDisk, "igSaveIniSettingsToDisk");
			bindFunc(cast(void**)&ImFont_ClearOutputData, "ImFont_ClearOutputData");
			bindFunc(cast(void**)&ImDrawList_PrimQuadUV, "ImDrawList_PrimQuadUV");
			bindFunc(cast(void**)&igEndDragDropTarget, "igEndDragDropTarget");
			bindFunc(cast(void**)&ImFontAtlas_GetGlyphRangesKorean, "ImFontAtlas_GetGlyphRangesKorean");
			bindFunc(cast(void**)&igGetKeyPressedAmount, "igGetKeyPressedAmount");
			bindFunc(cast(void**)&ImFontAtlas_GetTexDataAsRGBA32, "ImFontAtlas_GetTexDataAsRGBA32");
			bindFunc(cast(void**)&igNewFrame, "igNewFrame");
			bindFunc(cast(void**)&igResetMouseDragDelta, "igResetMouseDragDelta");
			bindFunc(cast(void**)&igGetTreeNodeToLabelSpacing, "igGetTreeNodeToLabelSpacing");
			bindFunc(cast(void**)&igGetMousePos, "igGetMousePos");
			bindFunc(cast(void**)&GlyphRangesBuilder_AddChar, "GlyphRangesBuilder_AddChar");
			bindFunc(cast(void**)&igPopID, "igPopID");
			bindFunc(cast(void**)&igIsMouseDoubleClicked, "igIsMouseDoubleClicked");
			bindFunc(cast(void**)&igSetNextWindowSize, "igSetNextWindowSize");
			bindFunc(cast(void**)&ImGuiTextFilter_IsActive, "ImGuiTextFilter_IsActive");
			bindFunc(cast(void**)&ImDrawList_PathClear, "ImDrawList_PathClear");
			bindFunc(cast(void**)&igBeginGroup, "igBeginGroup");
			bindFunc(cast(void**)&igColorConvertHSVtoRGB, "igColorConvertHSVtoRGB");
			bindFunc(cast(void**)&igVSliderFloat, "igVSliderFloat");
			bindFunc(cast(void**)&igColorConvertU32ToFloat4, "igColorConvertU32ToFloat4");
			bindFunc(cast(void**)&igPopTextWrapPos, "igPopTextWrapPos");
			bindFunc(cast(void**)&ImGuiTextFilter_Clear, "ImGuiTextFilter_Clear");
			bindFunc(cast(void**)&igGetColumnWidth, "igGetColumnWidth");
			bindFunc(cast(void**)&igEndMenuBar, "igEndMenuBar");
			bindFunc(cast(void**)&igGetStyleColorName, "igGetStyleColorName");
			bindFunc(cast(void**)&igIsMouseDragging, "igIsMouseDragging");
			bindFunc(cast(void**)&ImDrawList_PrimWriteIdx, "ImDrawList_PrimWriteIdx");
			bindFunc(cast(void**)&ImGuiStyle_ScaleAllSizes, "ImGuiStyle_ScaleAllSizes");
			bindFunc(cast(void**)&igGetItemRectSize, "igGetItemRectSize");
			bindFunc(cast(void**)&igMemAlloc, "igMemAlloc");
			bindFunc(cast(void**)&igColorPicker3, "igColorPicker3");
			bindFunc(cast(void**)&igSetCurrentContext, "igSetCurrentContext");
			bindFunc(cast(void**)&igPushItemWidth, "igPushItemWidth");
			bindFunc(cast(void**)&igGetStyle, "igGetStyle");
			bindFunc(cast(void**)&igSetItemAllowOverlap, "igSetItemAllowOverlap");
			bindFunc(cast(void**)&igEndChild, "igEndChild");
			bindFunc(cast(void**)&igCollapsingHeader, "igCollapsingHeader");
			bindFunc(cast(void**)&igTextDisabledV, "igTextDisabledV");
			bindFunc(cast(void**)&igDragFloatRange2, "igDragFloatRange2");
			bindFunc(cast(void**)&igSetMouseCursor, "igSetMouseCursor");
			bindFunc(cast(void**)&igShowFontSelector, "igShowFontSelector");
			bindFunc(cast(void**)&igInputScalar, "igInputScalar");
			bindFunc(cast(void**)&ImDrawList_PushClipRectFullScreen, "ImDrawList_PushClipRectFullScreen");
			bindFunc(cast(void**)&igShowStyleSelector, "igShowStyleSelector");
			bindFunc(cast(void**)&igGetTime, "igGetTime");
			bindFunc(cast(void**)&ImDrawList_ChannelsMerge, "ImDrawList_ChannelsMerge");
			bindFunc(cast(void**)&igGetColumnIndex, "igGetColumnIndex");
			bindFunc(cast(void**)&igBeginPopupContextItem, "igBeginPopupContextItem");
			bindFunc(cast(void**)&igGetCursorPosX, "igGetCursorPosX");
			bindFunc(cast(void**)&igEndMainMenuBar, "igEndMainMenuBar");
			bindFunc(cast(void**)&igSetCursorPosX, "igSetCursorPosX");
			bindFunc(cast(void**)&igGetMouseCursor, "igGetMouseCursor");
			bindFunc(cast(void**)&igMenuItem, "igMenuItem");
			bindFunc(cast(void**)&igGetScrollY, "igGetScrollY");
			bindFunc(cast(void**)&igPushAllowKeyboardFocus, "igPushAllowKeyboardFocus");
			bindFunc(cast(void**)&ImGuiTextBuffer_begin, "ImGuiTextBuffer_begin");
			bindFunc(cast(void**)&igSetCursorPosY, "igSetCursorPosY");
			bindFunc(cast(void**)&igSetWindowPos, "igSetWindowPos");
			bindFunc(cast(void**)&igGetCursorPosY, "igGetCursorPosY");
			bindFunc(cast(void**)&ImFontAtlas_AddCustomRectFontGlyph, "ImFontAtlas_AddCustomRectFontGlyph");
			bindFunc(cast(void**)&igBulletTextV, "igBulletTextV");
			bindFunc(cast(void**)&igGetContentRegionAvailWidth, "igGetContentRegionAvailWidth");
			bindFunc(cast(void**)&igEnd, "igEnd");
			bindFunc(cast(void**)&igIsKeyDown, "igIsKeyDown");
			bindFunc(cast(void**)&igIsMouseDown, "igIsMouseDown");
			bindFunc(cast(void**)&igGetCursorPos, "igGetCursorPos");
			bindFunc(cast(void**)&igLogButtons, "igLogButtons");
			bindFunc(cast(void**)&igDestroyContext, "igDestroyContext");
			bindFunc(cast(void**)&igSliderAngle, "igSliderAngle");
			bindFunc(cast(void**)&igSetNextWindowContentSize, "igSetNextWindowContentSize");
			bindFunc(cast(void**)&igGetWindowWidth, "igGetWindowWidth");
			bindFunc(cast(void**)&igGetWindowContentRegionMin, "igGetWindowContentRegionMin");
			bindFunc(cast(void**)&ImGuiStorage_GetInt, "ImGuiStorage_GetInt");
			bindFunc(cast(void**)&igSliderInt3, "igSliderInt3");
			bindFunc(cast(void**)&igPushTextWrapPos, "igPushTextWrapPos");
			bindFunc(cast(void**)&igSliderScalarN, "igSliderScalarN");
			bindFunc(cast(void**)&ImColor_HSV, "ImColor_HSV");
			bindFunc(cast(void**)&ImDrawList_PathLineTo, "ImDrawList_PathLineTo");
			bindFunc(cast(void**)&igStyleColorsClassic, "igStyleColorsClassic");
			bindFunc(cast(void**)&igSliderFloat, "igSliderFloat");
			bindFunc(cast(void**)&igImage, "igImage");
			bindFunc(cast(void**)&igBulletText, "igBulletText");
			bindFunc(cast(void**)&igInputFloat2, "igInputFloat2");
			bindFunc(cast(void**)&igGetTextLineHeightWithSpacing, "igGetTextLineHeightWithSpacing");
			bindFunc(cast(void**)&ImDrawList_PrimRectUV, "ImDrawList_PrimRectUV");
			bindFunc(cast(void**)&igColorEdit4, "igColorEdit4");
			bindFunc(cast(void**)&igLogToClipboard, "igLogToClipboard");
			bindFunc(cast(void**)&igBeginPopupContextWindow, "igBeginPopupContextWindow");
			bindFunc(cast(void**)&igDragScalar, "igDragScalar");
			bindFunc(cast(void**)&igSetItemDefaultFocus, "igSetItemDefaultFocus");
			bindFunc(cast(void**)&igCaptureMouseFromApp, "igCaptureMouseFromApp");
			bindFunc(cast(void**)&igIsAnyItemHovered, "igIsAnyItemHovered");
			bindFunc(cast(void**)&igPushFont, "igPushFont");
			bindFunc(cast(void**)&igTreePop, "igTreePop");
			bindFunc(cast(void**)&igGetWindowContentRegionWidth, "igGetWindowContentRegionWidth");
			bindFunc(cast(void**)&igInputText, "igInputText");
			bindFunc(cast(void**)&ImGuiTextBuffer_end, "ImGuiTextBuffer_end");
			bindFunc(cast(void**)&igPopStyleVar, "igPopStyleVar");
			bindFunc(cast(void**)&ImGuiTextFilter_PassFilter, "ImGuiTextFilter_PassFilter");
			bindFunc(cast(void**)&igGetFont, "igGetFont");
			bindFunc(cast(void**)&igTreeNode, "igTreeNode");
			bindFunc(cast(void**)&igTreeNodeV, "igTreeNodeV");
			bindFunc(cast(void**)&igGetScrollMaxX, "igGetScrollMaxX");
			bindFunc(cast(void**)&igSetTooltip, "igSetTooltip");
			bindFunc(cast(void**)&igGetContentRegionAvail, "igGetContentRegionAvail");
			bindFunc(cast(void**)&igInputFloat3, "igInputFloat3");
			bindFunc(cast(void**)&igSetKeyboardFocusHere, "igSetKeyboardFocusHere");
		}
    }

    public
    {
        this()
        {
            super(libNames);
        }
    }
}

__gshared DerelictImguiLoader DerelictImgui;

shared static this()
{
    DerelictImgui = new DerelictImguiLoader();
}
